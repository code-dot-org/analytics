{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2024-01-09T22:09:23.304184Z", "invocation_id": "c231a499-f0e0-45db-90da-f058ccba7678", "env": {"DBT_CLOUD_PROJECT_ID": "286339", "DBT_CLOUD_RUN_ID": "238759687", "DBT_CLOUD_JOB_ID": "412302", "DBT_CLOUD_RUN_REASON": "scheduled", "DBT_CLOUD_RUN_REASON_CATEGORY": "scheduled", "DBT_CLOUD_RUN_TRIGGER_CATEGORY": "RUN_REASON_CATEGORY_SCHEDULED", "DBT_CLOUD_ENVIRONMENT_ID": "233228", "DBT_CLOUD_ACCOUNT_ID": "182221"}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:21.887979Z", "completed_at": "2024-01-09T22:09:21.890252Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:21.983770Z", "completed_at": "2024-01-09T22:09:21.983779Z"}], "thread_id": "Thread-12", "execution_time": 0.14599108695983887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_course_names", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:21.890985Z", "completed_at": "2024-01-09T22:09:21.953992Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:21.985055Z", "completed_at": "2024-01-09T22:09:21.985062Z"}], "thread_id": "Thread-13", "execution_time": 0.14639663696289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_csf_plugged_stage_counts", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:21.954654Z", "completed_at": "2024-01-09T22:09:21.956083Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:21.985787Z", "completed_at": "2024-01-09T22:09:21.985795Z"}], "thread_id": "Thread-14", "execution_time": 0.143324613571167, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_csf_stages_for_completion", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:21.959271Z", "completed_at": "2024-01-09T22:09:21.960647Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:21.989260Z", "completed_at": "2024-01-09T22:09:21.989267Z"}], "thread_id": "Thread-16", "execution_time": 0.14520621299743652, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_school_years", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:21.962190Z", "completed_at": "2024-01-09T22:09:21.963499Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:21.990731Z", "completed_at": "2024-01-09T22:09:21.990739Z"}], "thread_id": "Thread-15", "execution_time": 0.14563870429992676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_script_names", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.005361Z", "completed_at": "2024-01-09T22:09:22.006900Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.049181Z", "completed_at": "2024-01-09T22:09:22.049190Z"}], "thread_id": "Thread-1", "execution_time": 0.12913918495178223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_state_abbreviations", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.009081Z", "completed_at": "2024-01-09T22:09:22.010369Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.053535Z", "completed_at": "2024-01-09T22:09:22.053544Z"}], "thread_id": "Thread-2", "execution_time": 0.12830281257629395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_training_school_years", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.017636Z", "completed_at": "2024-01-09T22:09:22.018979Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.103616Z", "completed_at": "2024-01-09T22:09:22.103627Z"}], "thread_id": "Thread-3", "execution_time": 0.14432525634765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cdo_analytics.seed_workshop_state_zip_manual", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.023744Z", "completed_at": "2024-01-09T22:09:22.064730Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.147874Z", "completed_at": "2024-01-09T22:09:22.147883Z"}], "thread_id": "Thread-4", "execution_time": 0.1669766902923584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__course_scripts", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__course_scripts as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"course_scripts\"\n),\n\nrenamed as (\n    select\n        id as course_script_id,\n        course_id,\n        script_id,\n        position,\n        experiment_name,\n        default_script_id\n    from source\n)\n\nselect * \nfrom renamed\n), course_scripts as (\n    select * \n    from __dbt__cte__base_dashboard__course_scripts\n)\n\nselect * \nfrom course_scripts", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__course_scripts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.028257Z", "completed_at": "2024-01-09T22:09:22.080939Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.149769Z", "completed_at": "2024-01-09T22:09:22.149777Z"}], "thread_id": "Thread-5", "execution_time": 0.16778278350830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__followers", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__followers as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"followers\"\n    where deleted_at is null \n),\n\nrenamed as (\n    select\n        id as follower_id,\n        student_user_id as student_id,\n        section_id,\n        created_at,\n        updated_at\n    from source\n)\n\nselect * \nfrom renamed\n), followers as (\n    select * \n    from __dbt__cte__base_dashboard__followers\n)\n\nselect * \nfrom followers", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__followers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.035318Z", "completed_at": "2024-01-09T22:09:22.105065Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.154910Z", "completed_at": "2024-01-09T22:09:22.154917Z"}], "thread_id": "Thread-6", "execution_time": 0.1677875518798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__levels", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__levels as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"levels\"\n),\n\nrenamed as (\n    select\n        id                      as level_id,\n        game_id,\n        name,\n        created_at,\n        updated_at,\n        level_num,\n        ideal_level_source_id,\n        user_id,\n        properties,\n        type,\n        md5,\n        published               as is_published,\n        notes,\n        audit_log\n    from source\n)\n\nselect * \nfrom renamed\n), levels as (\n    select * \n    from __dbt__cte__base_dashboard__levels\n)\n\nselect * \nfrom levels", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.040264Z", "completed_at": "2024-01-09T22:09:22.106571Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.155786Z", "completed_at": "2024-01-09T22:09:22.155793Z"}], "thread_id": "Thread-7", "execution_time": 0.16637825965881348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__levels_script_levels", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__levels_script_levels as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"levels_script_levels\"\n),\n\nrenamed as (\n    select\n        level_id,\n        script_level_id\n    from source\n)\n\nselect * \nfrom renamed\n), level_script_levels as (\n    select * \n    from __dbt__cte__base_dashboard__levels_script_levels\n)\n\nselect * \nfrom level_script_levels", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__levels_script_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.044598Z", "completed_at": "2024-01-09T22:09:22.108347Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.158171Z", "completed_at": "2024-01-09T22:09:22.158178Z"}], "thread_id": "Thread-8", "execution_time": 0.16678833961486816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__school_districts", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__school_districts as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"school_districts\"\n),\n\nrenamed as (\n    select\n        id      as school_district_id,\n        name    as school_district_name,\n        city    as school_district_city,\n        state   as school_district_state,\n        zip     as school_district_zip,\n        last_known_school_year_open,\n        created_at,\n        updated_at\n    from source\n)\n\nselect * \nfrom renamed\n), school_districts as (\n    select * \n    from __dbt__cte__base_dashboard__school_districts\n)\n\nselect * \nfrom school_districts", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__school_districts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.049890Z", "completed_at": "2024-01-09T22:09:22.115477Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.161489Z", "completed_at": "2024-01-09T22:09:22.161497Z"}], "thread_id": "Thread-10", "execution_time": 0.16676807403564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__school_infos", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__school_infos as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"school_infos\"\n),\n\nrenamed as (\n    select\n        id as school_info_id,\n        country,\n        school_type,\n        zip,\n        state,\n        school_district_id,\n        school_district_other,\n        school_district_name,\n        school_id,\n        school_other,\n        school_name,\n        full_address,\n        created_at,\n        updated_at,\n        validation_type\n    from source\n)\n\nselect * \nfrom renamed\n), school_infos as (\n    select * \n    from __dbt__cte__base_dashboard__school_infos\n)\n\nselect * \nfrom school_infos", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__school_infos\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.054373Z", "completed_at": "2024-01-09T22:09:22.131738Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.164128Z", "completed_at": "2024-01-09T22:09:22.164135Z"}], "thread_id": "Thread-9", "execution_time": 0.16492509841918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__school_stats_by_years", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__school_stats_by_years as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"school_stats_by_years\"\n),\n\nrenamed as (\n    select\n        school_id,\n        school_year,\n\n        lower(grades_offered_lo) as grades_offered_lo,\n        lower(grades_offered_hi) as grades_offered_hi,\n        \n        grade_pk_offered    as is_grade_pk,\n        grade_kg_offered    as is_grade_kg,\n        grade_01_offered    as is_grade_01,\n        grade_02_offered    as is_grade_02,\n        grade_03_offered    as is_grade_03,\n        grade_04_offered    as is_grade_04,\n        grade_05_offered    as is_grade_05,\n        grade_06_offered    as is_grade_06,\n        grade_07_offered    as is_grade_07,\n        grade_08_offered    as is_grade_08,\n        grade_09_offered    as is_grade_09,\n        grade_10_offered    as is_grade_10,\n        grade_11_offered    as is_grade_11,\n        grade_12_offered    as is_grade_12,\n        grade_13_offered    as is_grade_13,\n        \n        community_type,\n        virtual_status,\n        title_i_status,\n        \n        coalesce(students_total,0)      as total_students,\n        coalesce(student_am_count,0)    as count_student_am,\n        coalesce(student_as_count,0)    as count_student_as,\n        coalesce(student_hi_count,0)    as count_student_hi,\n        coalesce(student_bl_count,0)    as count_student_bl,\n        coalesce(student_wh_count,0)    as count_student_wh,\n        coalesce(student_hp_count,0)    as count_student_hp,\n        coalesce(student_tr_count,0)    as count_student_tr,\n        coalesce(frl_eligible_total,0)  as total_frl_eligible_students,\n        \n        created_at,\n        updated_at\n    from source\n)\n\nselect * \nfrom renamed\n), school_stats_by_years as (\n    select * \n    from __dbt__cte__base_dashboard__school_stats_by_years\n),\n\nsurvey_years as (\n    select school_id,\n        min(school_year) as first_survey_year,\n        max(school_year) as survey_year\n    from school_stats_by_years  \ngroup by 1\n),\n\nschool_stats_2019_2020 as (\n    select school_id,\n        total_students,\n        total_frl_eligible_students\n    from school_stats_by_years\n    where school_year = '2019-2020'\n),\n\nschool_stats_by_years_adjusted as (\n    select \n        ssby.school_id,\n        school_year,\n        survey_year,\n        first_survey_year,\n        grades_offered_lo,\n        grades_offered_hi,\n        is_grade_pk,\n        is_grade_kg,\n        is_grade_01,\n        is_grade_02,\n        is_grade_03,\n        is_grade_04,\n        is_grade_05,\n        is_grade_06,\n        is_grade_07,\n        is_grade_08,\n        is_grade_09,\n        is_grade_10,\n        is_grade_11,\n        is_grade_12,\n        is_grade_13,\n        virtual_status,\n        title_i_status,\n\n        -- adjust for frl stop-gap logic\n        nullif(\n            case when survey_years.survey_year = '2020-2021'\n                and ssby.total_students is null \n                    then ssby2.total_students\n                else ssby.total_students\n        end, 0) as total_students,\n\n        count_student_am,\n        count_student_as,\n        count_student_hi,\n        count_student_bl,\n        count_student_wh,\n        count_student_hp,\n        count_student_tr,\n\n        -- adjustment for FRL logic\n        case when survey_year = '2020-2021'\n             and ssby.total_frl_eligible_students is null \n                then ssby2.total_frl_eligible_students\n            else ssby.total_frl_eligible_students \n        end as total_frl_eligible_students,\n\n        created_at,\n        updated_at,\n        community_type,\n\n        case when title_i_status in (1,2,3,4,5) \n                then 1\n            when title_i_status = 6 \n                then 0\n        end as is_title_i,\n\n        case when community_type in (\n                    'rural_fringe',\n                    'rural_distant',\n                    'rural_remote',\n                    'town_remote',\n                    'town_distant')\n                then 1 \n            when community_type is not null \n                then 0\n        end as is_rural,\n\n        case when grades_offered_lo is null then null \n             when grades_offered_lo in (\n                    '01',\n                    '02',\n                    '03',\n                    '04',\n                    '05',\n                    'PK',\n                    'KG')\n                then 1\n             when coalesce(\n                is_grade_pk,\n                is_grade_kg,\n                is_grade_01,\n                is_grade_02,\n                is_grade_03,\n                is_grade_04,\n                is_grade_04,\n                is_grade_05\n                ) = 1 then 1\n            else 0 \n        end as is_stage_el,\n        \n        case when grades_offered_lo = 'pk'\n              and grades_offered_hi = '06'\n                then 0\n             when grades_offered_lo = 'kg'\n              and grades_offered_hi = '06'\n                then 0\n             when coalesce(is_grade_06,is_grade_07,is_grade_08) = 1\n                then 1\n             when (grades_offered_lo in ('06','07','08')\n                or grades_offered_hi in ('06','07','08'))\n                then 1\n             when grades_offered_lo is null then null \n            else 0 \n        end as is_stage_mi,\n        \n        case when coalesce(\n                is_grade_09,\n                is_grade_10,\n                is_grade_11,\n                is_grade_12,\n                is_grade_13\n                ) = 1 then 1 \n             when grades_offered_hi in (\n                '09',\n                '10',\n                '11',\n                '12'\n             ) then 1 \n             when grades_offered_hi is null then null \n            else 0 \n        end as is_stage_hi \n\n    from school_stats_by_years as ssby\n    left join school_stats_2019_2020 as ssby2 \n        on ssby.school_id = ssby2.school_id\n    left join survey_years \n        on ssby.school_id = survey_years.school_id\n)\n\nselect * \nfrom school_stats_by_years_adjusted", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__school_stats_by_years\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.095587Z", "completed_at": "2024-01-09T22:09:22.139090Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.166297Z", "completed_at": "2024-01-09T22:09:22.166305Z"}], "thread_id": "Thread-11", "execution_time": 0.16342425346374512, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__schools", "compiled": true, "compiled_code": "with  __dbt__cte__base_dashboard__schools as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"schools\"\n),\n\nrenamed as (\n    select\n        id                  as school_id,\n        school_district_id,\n        name                as school_name,\n        city,\n        state,\n        zip,\n        school_type,\n        created_at,\n        updated_at,\n        address_line1,\n        address_line2,\n        address_line3,\n        latitude,\n        longitude,\n        school_category,\n        last_known_school_year_open\n    from source\n)\n\nselect * \nfrom renamed\n), schools as (\n    select *\n    from __dbt__cte__base_dashboard__schools\n),\n\nfinal as (\n    select \n        case when len(school_id) = 11 \n             then lpad(school_id,12,'0') -- (js) adjustment to compensate for application dropping leading zeroes\n        else school_id \n        end as school_id,\n        school_district_id,\n        school_name,\n        city,\n        state,\n        zip,\n        school_type,\n        created_at,\n        updated_at,\n        address_line1,\n        address_line2,\n        address_line3,\n        latitude,\n        longitude,\n        school_category,\n        last_known_school_year_open\nfrom schools\n)\n\nselect *\nfrom final", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__schools\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.110875Z", "completed_at": "2024-01-09T22:09:22.150439Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.175921Z", "completed_at": "2024-01-09T22:09:22.175928Z"}], "thread_id": "Thread-12", "execution_time": 0.17363238334655762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__script_levels", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__script_levels as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"script_levels\"\n),\n\nrenamed as (\n    select\n        id                          as script_level_id,\n        script_id,\n        chapter,\n        created_at,\n        updated_at,\n        stage_id,\n        position,\n        assessment                  as is_assessment,\n        properties,\n        named_level                 as is_named_level,\n        bonus                       as is_bonus,\n        activity_section_id,\n        seed_key,\n        activity_section_position\n    from source\n)\n\nselect * \nfrom renamed\n), script_levels as (\n    select * \n    from __dbt__cte__base_dashboard__script_levels\n)\n\nselect * \nfrom script_levels", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__script_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.116841Z", "completed_at": "2024-01-09T22:09:22.151896Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.177876Z", "completed_at": "2024-01-09T22:09:22.177883Z"}], "thread_id": "Thread-13", "execution_time": 0.17470312118530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__scripts", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard__scripts as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"scripts\"\n),\n\nrenamed as (\n    select\n        id as script_id,\n        name as script_name,\n        created_at,\n        updated_at,\n        wrapup_video_id,\n        user_id,\n        login_required,\n        properties,\n        new_name,\n        family_name,\n        published_state,\n        instruction_type,\n        instructor_audience,\n        participant_audience\n    from source\n)\n\nselect * \nfrom renamed\n), scripts as (\n    select\n        script_id,\n        script_name,\n        created_at,\n        updated_at,\n        wrapup_video_id,\n        user_id,\n        login_required,\n        new_name,\n        family_name,\n        published_state,\n        instruction_type,\n        instructor_audience,\n        participant_audience,\n        case\n            when lower(script_name) like 'devices-20__'                         then 'csd'\n            when lower(script_name) like 'microbit%'                            then 'csd'\n            when lower(script_name) like '%hello%'                              then 'hoc'\n            when lower(script_name) like 'csd-post-survey-20__'                 then 'csd'\n            when lower(script_name) like 'csp-post-survey-20__'                 then 'csp'\n            when\n                json_extract_path_text(properties, 'curriculum_umbrella') = ''  then 'other'\n            else\n                lower(json_extract_path_text(properties, 'curriculum_umbrella'))\n        end as course_name_true,\n        json_extract_path_text(properties, 'supported_locales') as supported_locales\n    from __dbt__cte__base_dashboard__scripts\n)\nselect * from scripts", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__scripts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.128206Z", "completed_at": "2024-01-09T22:09:22.153706Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.180338Z", "completed_at": "2024-01-09T22:09:22.180345Z"}], "thread_id": "Thread-14", "execution_time": 0.18562889099121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__sections", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__sections as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"sections\"\n    where deleted_at is null  \n),\n\nrenamed as (\n    select\n        -- section data\n        id                      as section_id,\n        name                    as section_name,\n        section_type,\n\n        user_id,\n        login_type,\n        code,\n        script_id,\n        course_id,\n        grade,\n        \n        -- flags \n        stage_extras            as is_stage_extras,\n        pairing_allowed         as is_pairing_allowed,\n        sharing_disabled        as is_sharing_disabled,\n        hidden                  as is_hidden,\n        tts_autoplay_enabled    as is_tts_autoplay_enabled,\n        restrict_section        as is_restrict_section,\n        participant_type,\n        -- properties,\n        \n        -- timestamps\n        created_at,\n        updated_at,\n        first_activity_at\n    from source\n)\n\nselect * \nfrom renamed\n), sections as (\n    select *\n    from __dbt__cte__base_dashboard__sections\n)\n\nselect * \nfrom sections", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__sections\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.134019Z", "completed_at": "2024-01-09T22:09:22.156295Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.182510Z", "completed_at": "2024-01-09T22:09:22.182519Z"}], "thread_id": "Thread-16", "execution_time": 0.18307828903198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__stages", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__stages as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"stages\"\n),\n\nrenamed as (\n    select\n        id                  as stage_id,\n        name                as stage_name,\n        absolute_position,\n        script_id,\n        created_at,\n        updated_at,\n        lockable            as is_lockable,\n        relative_position,\n        -- properties,\n        lesson_group_id,\n        key,\n        has_lesson_plan\n    from source\n)\n\nselect * \nfrom renamed\n), stages as (\n    select \n        stage_id,\n        stage_name,\n        case when is_lockable = 1 then absolute_position else relative_position end as stage_number,\n        absolute_position,\n        script_id,\n        created_at,\n        updated_at,\n        is_lockable,\n        relative_position,\n        -- properties,\n        lesson_group_id,\n        key,\n        has_lesson_plan        \n    from __dbt__cte__base_dashboard__stages\n)\n\nselect * \nfrom stages", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__stages\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.141467Z", "completed_at": "2024-01-09T22:09:22.158860Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.192756Z", "completed_at": "2024-01-09T22:09:22.192765Z"}], "thread_id": "Thread-15", "execution_time": 0.18108820915222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__unit_groups", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__unit_groups as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"unit_groups\"\n),\n\nrenamed as (\n    select\n        id as unit_group_id,\n        name,\n        properties,\n        created_at,\n        updated_at,\n        published_state,\n        instruction_type,\n        instructor_audience,\n        participant_audience\n    from source\n)\n\nselect * \nfrom renamed\n), unit_groups as (\n    select * \n    from __dbt__cte__base_dashboard__unit_groups\n)\n\nselect * \nfrom unit_groups", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__unit_groups\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.183216Z", "completed_at": "2024-01-09T22:09:22.225578Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.274574Z", "completed_at": "2024-01-09T22:09:22.274584Z"}], "thread_id": "Thread-1", "execution_time": 0.13674211502075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__user_geos", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__user_geos as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production\".\"user_geos\"\n),\n\nrenamed as (\n    select\n        id as user_geo_id,\n        user_id,\n        created_at,\n        updated_at,\n        indexed_at,\n        city,\n        state,\n        lower(country) as country,\n        postal_code\n    from source\n)\n\nselect * \nfrom renamed\n), user_geos as (\n    select *,\n        row_number() over (partition by user_id order by user_geo_id desc) as row_number,\n        case when country = 'united states' then 0\n             when country <> 'united states' then 1 \n             else null \n        end as is_international\n    from __dbt__cte__base_dashboard__user_geos\n),\n\nfinal as (\n    select\n        -- pk\n        user_id,\n\n        -- geos \n        city,\n        state,\n        postal_code,\n        country,\n        is_international,\n        \n        -- dates\n        created_at,\n        updated_at,\n        indexed_at\n    from user_geos\n    where row_number = 1\n)\n\nselect *\nfrom final", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__user_geos\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.193502Z", "completed_at": "2024-01-09T22:09:22.228010Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.279063Z", "completed_at": "2024-01-09T22:09:22.279073Z"}], "thread_id": "Thread-2", "execution_time": 0.13654732704162598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__user_levels", "compiled": true, "compiled_code": "\n\nwith \n __dbt__cte__base_dashboard__user_levels as (\nwith \nsource as (\n      select * \n      from \"dashboard\".\"dashboard_production\".\"user_levels\"\n),\n\nrenamed as (\n    select\n        id                          as user_level_id,\n        user_id,\n        level_id,\n        script_id,\n        level_source_id,\n        attempts,\n        created_at,\n        updated_at,\n        best_result,\n        time_spent,\n        submitted                   as is_submitted,\n        readonly_answers            as is_read_only_answers,\n        unlocked_at\n        -- properties\n    from source\n)\n\nselect * \nfrom renamed\n), user_levels as (\n    select * \n    from __dbt__cte__base_dashboard__user_levels\n\n    \n\n    where updated_at > (select max(updated_at) from \"dev\".\"analytics\".\"stg_dashboard__user_levels\" )\n    \n    \n)\n\nselect * \nfrom user_levels", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__user_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.208957Z", "completed_at": "2024-01-09T22:09:22.234307Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.290553Z", "completed_at": "2024-01-09T22:09:22.290562Z"}], "thread_id": "Thread-3", "execution_time": 0.14864850044250488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard__users", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard__users as (\nwith \nsource as (\n      select * \n      from \"dashboard\".\"dashboard_production\".\"users\"\n      where deleted_at is null \n),\n\nrenamed as (\n    select\n        id                          as user_id,\n        studio_person_id,\n        sign_in_count,\n        current_sign_in_at,\n        last_sign_in_at,\n        created_at,\n        updated_at,        \n        gender,\n        locale,\n        birthday,\n        user_type,\n        school_info_id,\n        total_lines,\n        active                      as is_active,\n        purged_at,\n        urm                         as is_urg,\n        races,\n        primary_contact_info_id\n    from source\n)\n\nselect * \nfrom renamed\n), users as (\n    select *\n    from __dbt__cte__base_dashboard__users\n    where is_active \n),\n\nrenamed as (\n    select \n        -- PK\n        user_id,\n\n        -- FK's\n        case when user_type = 'student' then user_id end as student_id,\n        case when user_type = 'teacher' then user_id end as teacher_id,\n        studio_person_id,\n\n        -- user info\n        user_type,\n        datediff(year,birthday,current_date ) as age_years,\n        nullif(lower(gender),'') as gender,\n        is_urg,\n\n        -- misc.\n        locale,\n        sign_in_count,\n        school_info_id,\n        total_lines,\n\n        -- dates         \n        current_sign_in_at,\n        last_sign_in_at,\n        created_at,\n        updated_at,     \n        purged_at\n    from users\n)\n\nselect * \nfrom renamed", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard__users\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.238708Z", "completed_at": "2024-01-09T22:09:22.279624Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.334445Z", "completed_at": "2024-01-09T22:09:22.334453Z"}], "thread_id": "Thread-4", "execution_time": 0.14364242553710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_attendances", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard_pii__pd_attendances as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_attendances\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id as pd_attendance_id,\n        pd_session_id,\n        teacher_id,\n        created_at,\n        updated_at,\n        pd_enrollment_id,\n        marked_by_user_id\n    from source\n)\n\nselect * \nfrom renamed\n), pd_attendances as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_attendances\n)\n\nselect * \nfrom pd_attendances", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_attendances\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.243550Z", "completed_at": "2024-01-09T22:09:22.284827Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.336445Z", "completed_at": "2024-01-09T22:09:22.336453Z"}], "thread_id": "Thread-5", "execution_time": 0.14426779747009277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_applications", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard_pii__pd_applications as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_applications\"\n    where deleted_at is null\n),\n\nrenamed as (\n    select\n        id  as pd_application_id,\n        user_id,\n        type,\n        application_year,\n        application_type,\n        regional_partner_id,\n        status,\n        locked_at,\n        -- notes,\n        -- form_data,\n        created_at,\n        updated_at,\n        course,\n        response_scores,\n        application_guid,\n        accepted_at,\n        -- properties,\n        status_timestamp_change_log,\n        applied_at\n    from source\n)\n\nselect * \nfrom renamed\n), pd_applications as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_applications\n)\n\nselect * \nfrom pd_applications", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_applications\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.250514Z", "completed_at": "2024-01-09T22:09:22.291728Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.341240Z", "completed_at": "2024-01-09T22:09:22.341249Z"}], "thread_id": "Thread-6", "execution_time": 0.1335446834564209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_enrollments", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard_pii__pd_enrollments as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_enrollments\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id as pd_enrollment_id,\n        pd_workshop_id,\n        name,\n        -- first_name,\n        -- last_name,\n        -- email,\n        created_at,\n        updated_at,\n        school,\n        code,\n        user_id,\n        survey_sent_at,\n        completed_survey_id,\n        school_info_id,\n        -- properties,\n        application_id\n    from source\n)\n\nselect * \nfrom renamed\n), pd_enrollments as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_enrollments\n)\n\nselect * \nfrom pd_enrollments", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_enrollments\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.269991Z", "completed_at": "2024-01-09T22:09:22.294834Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.343765Z", "completed_at": "2024-01-09T22:09:22.343773Z"}], "thread_id": "Thread-8", "execution_time": 0.1328587532043457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_regional_partner_mappings", "compiled": true, "compiled_code": "with  __dbt__cte__base_dashboard_pii__pd_regional_partner_mappings as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_regional_partner_mappings\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id as pd_regional_partner_mapping_id,\n        regional_partner_id,\n        state,\n        zip_code,\n        created_at,\n        updated_at\n    from source\n)\n\nselect * \nfrom renamed\n), pd_regional_partner_mappings as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_regional_partner_mappings\n)\n\nselect * \nfrom pd_regional_partner_mappings", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_regional_partner_mappings\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.255613Z", "completed_at": "2024-01-09T22:09:22.296568Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.346324Z", "completed_at": "2024-01-09T22:09:22.346332Z"}], "thread_id": "Thread-7", "execution_time": 0.13794445991516113, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_international_opt_ins", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard_pii__pd_international_opt_ins as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_international_opt_ins\"\n),\n\nrenamed as (\n    select \n        id as international_opt_in_id,\n        user_id,\n        form_data,\n        created_at,\n        updated_at\n    from source \n)\n\nselect *\nfrom renamed\n), international_opt_ins as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_international_opt_ins\n),\n\nfinal as (\n    select \n        international_opt_in_id,\n        user_id                                             as teacher_user_id,\n        created_at                                          as form_submitted_at,\n        updated_at                                          as updated_at,\n\n        -- json_extract_path_text(form_data, 'firstName')           as first_name,\n        -- json_extract_path_text(form_data, 'firstNamePreferred')  as pref_name,\n        -- json_extract_path_text(form_data, 'lastName')            as last_name,\n        -- json_extract_path_text(form_data, 'email')               as email,\n        -- json_extract_path_text(form_data, 'emailAlternate')      as email_alt,\n        -- json_extract_path_text(form_data, 'gender')              as gender,\n        json_extract_path_text(form_data, 'schoolDepartment')    as school_department,\n        json_extract_path_text(form_data, 'schoolMunicipality')  as school_municipality,\n        json_extract_path_text(form_data, 'schoolName')          as school_name,\n        json_extract_path_text(form_data, 'schoolCity')          as school_city,\n        json_extract_path_text(form_data, 'schoolCountry')       as school_country,\n        json_extract_path_text(form_data, 'ages')                as age_taught,\n        json_extract_path_text(form_data, 'subjects')            as subject_taught,\n        json_extract_path_text(form_data, 'resources')           as cs_resources,\n        json_extract_path_text(form_data, 'robotics')            as robotics_resources,\n        json_extract_path_text(form_data, 'date')                as workshop_date,\n        json_extract_path_text(form_data, 'workshopOrganizer')   as workshop_organizer,\n        json_extract_path_text(form_data, 'workshopFacilitator') as workshop_facilitator,\n        json_extract_path_text(form_data, 'workshopCourse')      as workshop_course,\n        json_extract_path_text(form_data, 'emailOptIn')          as email_opt_in\n        \n    from international_opt_ins \n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_international_opt_ins\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.275421Z", "completed_at": "2024-01-09T22:09:22.298224Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.348386Z", "completed_at": "2024-01-09T22:09:22.348393Z"}], "thread_id": "Thread-10", "execution_time": 0.1341724395751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_sessions", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard_pii__pd_sessions as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_sessions\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id                  as pd_session_id,\n        pd_workshop_id,\n        \"start\"             as started_at,\n        \"end\"               as ended_at,\n        created_at,\n        updated_at,\n        code\n    from source\n)\n\nselect * \nfrom renamed\n), pd_sessions as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_sessions\n)\n\nselect * \nfrom pd_sessions", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_sessions\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.281292Z", "completed_at": "2024-01-09T22:09:22.309926Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.351026Z", "completed_at": "2024-01-09T22:09:22.351035Z"}], "thread_id": "Thread-9", "execution_time": 0.13376426696777344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_workshops", "compiled": true, "compiled_code": "with\n __dbt__cte__base_dashboard_pii__pd_workshops as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_workshops\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id                  as pd_workshop_id,\n        organizer_id,\n        location_name,\n        location_address,\n        processed_location,\n        course,\n        subject,\n        capacity,\n        -- notes,\n        section_id,\n        started_at,\n        ended_at,\n        created_at,\n        updated_at,\n        processed_at,\n        regional_partner_id,\n        on_map              as is_on_map,\n        funded              as is_funded,\n        funding_type,\n        -- properties,\n        module -- (js) new col added (see: https://github.com/code-dot-org/code-dot-org/pull/53949/files)\n    from source\n)\n\nselect * \nfrom renamed\n), pd_workshops as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_workshops\n)\n\nselect * \nfrom pd_workshops", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_workshops\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.286037Z", "completed_at": "2024-01-09T22:09:22.315031Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.353269Z", "completed_at": "2024-01-09T22:09:22.353277Z"}], "thread_id": "Thread-11", "execution_time": 0.1341991424560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__pd_workshop_facilitators", "compiled": true, "compiled_code": "with  __dbt__cte__base_dashboard_pii__pd_workshops_facilitators as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"pd_workshops_facilitators\"\n),\n\nrenamed as (\n    select\n        pd_workshop_id,\n        user_id\n    from source\n)\n\nselect * \nfrom renamed\n), pd_workshop_facilitators as (\n    select * \n    from __dbt__cte__base_dashboard_pii__pd_workshops_facilitators\n)\n\nselect * \nfrom pd_workshop_facilitators", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__pd_workshop_facilitators\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.298743Z", "completed_at": "2024-01-09T22:09:22.337203Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.362872Z", "completed_at": "2024-01-09T22:09:22.362879Z"}], "thread_id": "Thread-12", "execution_time": 0.1499958038330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__regional_partners", "compiled": true, "compiled_code": "with  __dbt__cte__base_dashboard_pii__regional_partners as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"regional_partners\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id                  as regional_partner_id,\n        \"group\"             as regional_partner_group,\n        name                as regional_partner_name,\n        urban               as is_urban,\n        attention,\n        street,\n        apartment_or_suite,\n        city,\n        state,\n        zip_code,\n        -- phone_number,\n        -- notes,\n        created_at,\n        updated_at,\n        -- properties,\n        is_active\n    from source\n)\n\nselect * \nfrom renamed\n), regional_partners as (\n    select * \n    from __dbt__cte__base_dashboard_pii__regional_partners\n)\n\nselect * \nfrom regional_partners", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__regional_partners\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.304544Z", "completed_at": "2024-01-09T22:09:22.339007Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.364690Z", "completed_at": "2024-01-09T22:09:22.364697Z"}], "thread_id": "Thread-13", "execution_time": 0.15044665336608887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__user_school_infos", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard_pii__user_school_infos as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"user_school_infos\"\n),\n\nrenamed as (\n    select\n        id                      as user_school_info_id,\n        user_id,\n        start_date              as started_at,\n        end_date                as ended_at,\n        school_info_id,\n        last_confirmation_date  as last_confirmation_at,\n        created_at,\n        updated_at\n    from source\n)\n\nselect * \nfrom renamed\n), user_school_infos as (\n    select \n        user_school_info_id,\n        user_id,\n        started_at,\n        case when ended_at is not null then ended_at else '9999-12-31' end as ended_at,\n        school_info_id,\n        last_confirmation_at,\n        created_at,\n        updated_at \n    from __dbt__cte__base_dashboard_pii__user_school_infos\n)\n\nselect * \nfrom user_school_infos", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__user_school_infos\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.310460Z", "completed_at": "2024-01-09T22:09:22.341953Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.367783Z", "completed_at": "2024-01-09T22:09:22.367791Z"}], "thread_id": "Thread-14", "execution_time": 0.16039156913757324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_dashboard_pii__users", "compiled": true, "compiled_code": "with \n __dbt__cte__base_dashboard_pii__users as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"dashboard_production_pii\".\"users\"\n    where not deleted_at\n),\n\nrenamed as (\n    select\n        id                          as user_id,\n        studio_person_id,\n        sign_in_count,\n        current_sign_in_at,\n        last_sign_in_at,\n        created_at,\n        updated_at,\n        -- username,\n        provider,\n        uid,\n        admin,\n        -- gender,\n        -- name,\n        locale,\n        -- birthday,\n        user_type,\n        school,\n        full_address,\n        school_info_id,\n        total_lines,\n        active                      as is_active,\n        purged_at,\n        invited_by_id,\n        invited_by_type,\n        terms_of_service_version,\n        urm                         as is_urm,\n        -- races,\n        primary_contact_info_id\n\n    from source\n)\n\nselect * \nfrom renamed\n), users as (\n    select * \n    from __dbt__cte__base_dashboard_pii__users\n)\n\nselect * \nfrom users", "relation_name": "\"dev\".\"analytics\".\"stg_dashboard_pii__users\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.327468Z", "completed_at": "2024-01-09T22:09:22.344269Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.384509Z", "completed_at": "2024-01-09T22:09:22.384517Z"}], "thread_id": "Thread-15", "execution_time": 0.13833999633789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_pegasus_pii__form_geos", "compiled": true, "compiled_code": "with \n __dbt__cte__base_pegasus_pii__form_geos as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"pegasus_pii\".\"form_geos\"\n),\n\nrenamed as (\n    select\n        id as form_geo_id,\n        form_id,\n        created_at,\n        updated_at,\n        \n        city,\n        state,\n        country,\n        postal_code\n        \n    from source\n)\n\nselect * \nfrom renamed\n), form_geos as (\n    select *\n    from __dbt__cte__base_pegasus_pii__form_geos\n)\n\nselect * \nfrom form_geos", "relation_name": "\"dev\".\"analytics\".\"stg_pegasus_pii__form_geos\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.315555Z", "completed_at": "2024-01-09T22:09:22.344761Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.385206Z", "completed_at": "2024-01-09T22:09:22.385213Z"}], "thread_id": "Thread-16", "execution_time": 0.14748430252075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_legacy_pii__international_partners", "compiled": true, "compiled_code": "with \n __dbt__cte__base_legacy_pii__international_partners as (\nwith \nsource as (\n      select * \n      from \"dev\".\"analytics_pii\".\"seed_international_partners\"\n)\n\nselect * \nfrom source\n), international_partners as (\n    select * \n    from __dbt__cte__base_legacy_pii__international_partners\n),\n\nrenamed as (\n    select         \n        -- partner data\n        partner_id,\n        partner                                                                             as partner_name,\n        case when partner_type = '' then 'public' else partner_type end                     as partner_type,\n\n        -- country data \n        country_cd                                                                          as country_code,\n        lower(display_name)                                                                 as country_name,\n        lower(alt_name)                                                                     as alt_country_name,\n        region,\n\n        --contact info\n        case when workshop_organizers = '' \n            then 'no partner' \n            else lower(workshop_organizers) end                                             as workshop_organizers,\n        contact_name,\n        contact_email -- @allison is this approved as well? (js) \n        -- exceptions -- unclear if needed, removing for now (js)\n    from international_partners\n)\n\nselect * \nfrom renamed", "relation_name": "\"dev\".\"analytics\".\"stg_legacy_pii__international_partners\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.368482Z", "completed_at": "2024-01-09T22:09:22.413919Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.486927Z", "completed_at": "2024-01-09T22:09:22.486937Z"}], "thread_id": "Thread-1", "execution_time": 0.1726071834564209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_pegasus_pii__forms", "compiled": true, "compiled_code": "with \n __dbt__cte__base_pegasus_pii__forms as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"pegasus_pii\".\"forms\"\n),\n\nrenamed as (\n    select\n        id                      as form_id,\n        source_id,\n        email,\n        name,\n        kind                    as form_kind,\n        -- data                    as form_data,\n        created_at,\n        updated_at,\n        indexed_at,\n        review,\n        reviewed_by,\n        reviewed_at,\n        processed_at,\n        -- processed_data, \n        notified_at,\n        user_id,\n        parent_id,\n        location_country_code_s as location_country_code,\n        data_text               as form_data_text,  \n        processed_data_text\n    from source\n)\n\nselect * \nfrom renamed\n), forms as (\n    select \n        form_id,\n        case\n            when lower(form_kind) like 'hocsignup%' then 'hoc'\n            when lower(form_kind) = 'professionaldevelopmentworkshop' then 'pd'\n            else lower(form_kind)\n        end                                                             as form_category,\n        case \n            when lower(form_kind) like 'hocsignup%' \n            then right(form_kind,4) \n            else null \n        end                                                             as hoc_year,\n        email,\n        name,\n        form_kind,\n        -- form_data,\n        created_at,\n        updated_at,\n        indexed_at,\n        review,\n        reviewed_by,\n        reviewed_at,\n        processed_at,\n        -- processed_data, \n        notified_at,\n        user_id,\n        parent_id,\n        location_country_code,\n        -- form_data_text,  \n        -- processed_data_text,\n        nullif(json_extract_path_text(processed_data_text, 'location_city_s', true), '')      as city,\n        nullif(json_extract_path_text(processed_data_text, 'location_state_s', true), '')     as state,\n        nullif(json_extract_path_text(processed_data_text, 'location_country_s', true), '')   as country,\n        nullif(json_extract_path_text(form_data_text, 'event_type_s', true), '')              as event_type,\n        nullif(json_extract_path_text(form_data_text, 'email_preference_opt_in_s', true), '') as email_pref\n    from __dbt__cte__base_pegasus_pii__forms\n)\n\nselect * \nfrom forms", "relation_name": "\"dev\".\"analytics\".\"stg_pegasus_pii__forms\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.385867Z", "completed_at": "2024-01-09T22:09:22.418408Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.495088Z", "completed_at": "2024-01-09T22:09:22.495098Z"}], "thread_id": "Thread-2", "execution_time": 0.17775368690490723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.stg_pegasus_pii__hoc_activity", "compiled": true, "compiled_code": "\n\nwith\n __dbt__cte__base_pegasus_pii__hoc_activity as (\nwith \nsource as (\n    select * \n    from \"dashboard\".\"pegasus_pii\".\"hoc_activity\"\n),\n\nrenamed as (\n    select\n        id                                      as hoc_activity_id,\n        referer,\n        company,\n        tutorial,\n        started_at,\n        pixel_started_at,\n        country_code,\n        state_code,\n        city,\n        country,\n        state\n    from source\n)\n\nselect * \nfrom renamed\n), hoc_activity as (\n    select\n        hoc_activity_id,\n        referer,\n        company,\n        tutorial,\n        coalesce(started_at, pixel_started_at)                      as started_at,\n        case when pixel_started_at is not null then 1 else 0 end    as is_third_party,\n        country_code,\n        state_code,\n        city,\n        country,\n        state\n    from __dbt__cte__base_pegasus_pii__hoc_activity\n    \n\n    where started_at > (select max(started_at) from \"dev\".\"analytics\".\"stg_pegasus_pii__hoc_activity\" )\n    \n    \n)\n\nselect *\nfrom hoc_activity", "relation_name": "\"dev\".\"analytics\".\"stg_pegasus_pii__hoc_activity\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.399801Z", "completed_at": "2024-01-09T22:09:22.422441Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.511828Z", "completed_at": "2024-01-09T22:09:22.511837Z"}], "thread_id": "Thread-3", "execution_time": 0.1803443431854248, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.redshift.redshift_admin_dependencies", "compiled": true, "compiled_code": "\n\nwith __dbt__cte__pg_class as (\nselect\n  oid\n, relname\n, relnamespace\n, reltype\n, relowner\n, relam\n, relfilenode\n, reltablespace\n, relpages\n, reltuples\n, reltoastrelid\n, reltoastidxid\n, relhasindex\n, relisshared\n, relkind\n, relnatts\n, relexternid\n, relisreplicated\n, relispinned\n, reldiststyle\n, relprojbaseid\n, relchecks\n, reltriggers\n, relukeys\n, relfkeys\n, relrefs\n, relhasoids\n, relhaspkey\n, relhasrules\n, relhassubclass\n, relacl\nfrom pg_catalog.pg_class\n),  __dbt__cte__pg_depend as (\nselect\n  classid\n, objid\n, objsubid\n, refclassid\n, refobjid\n, refobjsubid\n, deptype\nfrom pg_catalog.pg_depend\n),  __dbt__cte__pg_namespace as (\nselect\n  oid\n, nspname\n, nspowner\n, nspacl\nfrom pg_catalog.pg_namespace\n) select distinct\n  srcobj.oid as source_oid\n  , srcnsp.nspname as source_schemaname\n  , srcobj.relname as source_objectname\n  , tgtobj.oid as dependent_oid\n  , tgtnsp.nspname as dependent_schemaname\n  , tgtobj.relname as dependent_objectname\n\nfrom\n\n  __dbt__cte__pg_class as srcobj\n  join __dbt__cte__pg_depend as srcdep on srcobj.oid = srcdep.refobjid\n  join __dbt__cte__pg_depend as tgtdep on srcdep.objid = tgtdep.objid\n  join __dbt__cte__pg_class as tgtobj\n    on tgtdep.refobjid = tgtobj.oid\n    and srcobj.oid <> tgtobj.oid\n  left join __dbt__cte__pg_namespace as srcnsp\n    on srcobj.relnamespace = srcnsp.oid\n  left join __dbt__cte__pg_namespace tgtnsp on tgtobj.relnamespace = tgtnsp.oid\n\nwhere\n  tgtdep.deptype = 'i' --dependency_internal\n  and tgtobj.relkind = 'v' --i=index, v=view, s=sequence", "relation_name": "\"dev\".\"analytics\".\"redshift_admin_dependencies\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.427472Z", "completed_at": "2024-01-09T22:09:22.493678Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.553440Z", "completed_at": "2024-01-09T22:09:22.553449Z"}], "thread_id": "Thread-4", "execution_time": 0.17112350463867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.redshift.redshift_admin_users_schema_privileges", "compiled": true, "compiled_code": "with  __dbt__cte__pg_tables as (\nselect\n  schemaname as schema_name\n, tablename as table_name\n, tableowner as table_owner\n, tablespace as table_space\n, hasindexes as has_indexes\n, hasrules as has_rules\n, hastriggers as has_triggers\nfrom pg_catalog.pg_tables\n),  __dbt__cte__pg_views as (\nselect\n  schemaname as schema_name\n, viewname as view_name\n, viewowner as view_owner\nfrom pg_catalog.pg_views\n),  __dbt__cte__pg_user as (\nselect\n\n  usesysid as user_id\n, usename as username\n\nfrom pg_catalog.pg_user\n), tables as (\n\n  select * from __dbt__cte__pg_tables\n\n), views as (\n\n  select * from __dbt__cte__pg_views\n\n), users as (\n\n  select * from __dbt__cte__pg_user\n  \n), schemas as (\n  \n  select\n  distinct(schema_name)\n  from tables\n  where schema_name not in ('pg_catalog', 'information_schema')\n        \n  union\n        \n  select\n  distinct(schema_name)\n  from views\n        \n  where schema_name not in ('pg_catalog', 'information_schema')\n  \n)\n\n\nselect \n  schemas.schema_name\n, users.username\n, has_schema_privilege(users.username, schemas.schema_name, 'usage') AS has_usage_privilege\n, has_schema_privilege(users.username, schemas.schema_name, 'create') AS has_create_privilege\nfrom schemas\ncross join users\norder by schemas.schema_name, users.username", "relation_name": "\"dev\".\"analytics\".\"redshift_admin_users_schema_privileges\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.436342Z", "completed_at": "2024-01-09T22:09:22.495595Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.557252Z", "completed_at": "2024-01-09T22:09:22.557260Z"}], "thread_id": "Thread-5", "execution_time": 0.17391753196716309, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.redshift.redshift_admin_users_table_view_privileges", "compiled": true, "compiled_code": "with  __dbt__cte__pg_tables as (\nselect\n  schemaname as schema_name\n, tablename as table_name\n, tableowner as table_owner\n, tablespace as table_space\n, hasindexes as has_indexes\n, hasrules as has_rules\n, hastriggers as has_triggers\nfrom pg_catalog.pg_tables\n),  __dbt__cte__pg_views as (\nselect\n  schemaname as schema_name\n, viewname as view_name\n, viewowner as view_owner\nfrom pg_catalog.pg_views\n),  __dbt__cte__pg_user as (\nselect\n\n  usesysid as user_id\n, usename as username\n\nfrom pg_catalog.pg_user\n), tables as (\n\n  select * from __dbt__cte__pg_tables\n\n), views as (\n\n  select * from __dbt__cte__pg_views\n\n), users as (\n\n  select * from __dbt__cte__pg_user\n\n), objects as (\n  \n  select\n    schema_name\n  , 'table' as object_type\n  , table_name as object_name\n  , '\"' || schema_name || '\".\"' || table_name || '\"' as full_object_name\n  from tables\n  where schema_name not in ('pg_catalog', 'information_schema')\n  \n  union\n  \n  select\n    schema_name\n  , 'view' as object_type\n  , view_name as object_name\n  , '\"' || schema_name || '\".\"' || view_name || '\"' as full_object_name\n  from views\n  where schema_name not in ('pg_catalog', 'information_schema')\n  \n)\n\nselect \n  objects.schema_name\n, objects.object_name\n, users.username\n, has_table_privilege(users.username, objects.full_object_name, 'select') as has_select_privilege\n, has_table_privilege(users.username, objects.full_object_name, 'insert') as has_insert_privilege\n, has_table_privilege(users.username, objects.full_object_name, 'update') as has_update_privilege\n, has_table_privilege(users.username, objects.full_object_name, 'delete') as has_delete_privilege\n, has_table_privilege(users.username, objects.full_object_name, 'references') as has_references_privilege\nfrom objects\ncross join users\norder by objects.full_object_name, users.username", "relation_name": "\"dev\".\"analytics\".\"redshift_admin_users_table_view_privileges\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.461268Z", "completed_at": "2024-01-09T22:09:22.516541Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.564308Z", "completed_at": "2024-01-09T22:09:22.564316Z"}], "thread_id": "Thread-8", "execution_time": 0.1657564640045166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.redshift.redshift_admin_table_stats", "compiled": true, "compiled_code": "with  __dbt__cte__stv_tbl_perm as (\nselect\n  slice\n, id -- table id\n, name -- table name\n, rows\n, sorted_rows\n, (rows - sorted_rows) as unsorted_rows\n, temp\n, db_id\n, backup\nfrom pg_catalog.stv_tbl_perm\n),  __dbt__cte__pg_class as (\nselect\n  oid\n, relname\n, relnamespace\n, reltype\n, relowner\n, relam\n, relfilenode\n, reltablespace\n, relpages\n, reltuples\n, reltoastrelid\n, reltoastidxid\n, relhasindex\n, relisshared\n, relkind\n, relnatts\n, relexternid\n, relisreplicated\n, relispinned\n, reldiststyle\n, relprojbaseid\n, relchecks\n, reltriggers\n, relukeys\n, relfkeys\n, relrefs\n, relhasoids\n, relhaspkey\n, relhasrules\n, relhassubclass\n, relacl\nfrom pg_catalog.pg_class\n),  __dbt__cte__pg_namespace as (\nselect\n  oid\n, nspname\n, nspowner\n, nspacl\nfrom pg_catalog.pg_namespace\n),  __dbt__cte__stv_blocklist as (\nselect\n  slice\n, col\n, tbl\n, blocknum\n, num_values\n, extended_limits\n, minvalue\n, maxvalue\n, sb_pos\n, pinned\n, on_disk\n, backed_up\n, modified\n, hdr_modified\n, unsorted\n, tombstone\n, preferred_diskno\n, temporary\n, newblock\n, num_readers\n, id\n, flags\nfrom pg_catalog.stv_blocklist\n),  __dbt__cte__pg_attribute as (\nselect\n  attrelid\n, attname\n, atttypid\n, attstattarget\n, attlen\n, attnum\n, attndims\n, attcacheoff\n, atttypmod\n, attbyval\n, attstorage\n, attalign\n, attnotnull\n, atthasdef\n, attisdropped\n, attislocal\n, attinhcount\n, attisdistkey\n, attispreloaded\n, attsortkeyord\n, attencodingtype\n, attencrypttype\n, (case attisdistkey\n        when 't' then attname\n        else null end) as dist_key\n, (case attsortkeyord\n        when 1 then attname\n        else null end) as sort_key\nfrom pg_catalog.pg_attribute\n),  __dbt__cte__svv_diskusage as (\nselect\n  db_id\n, name\n, slice\n, col\n, tbl\n, blocknum\n, num_values\n, extended_limits\n, minvalue\n, maxvalue\n, sb_pos\n, pinned\n, on_disk\n, backed_up\n, modified\n, hdr_modified\n, unsorted\n, tombstone\n, preferred_diskno\n, temporary\n, newblock\n, num_readers\n, id\n, flags\nfrom pg_catalog.svv_diskusage\n),  __dbt__cte__stv_partitions as (\nselect\n\n  owner\n, host\n, diskno\n, part_begin\n, part_end\n, used\n, tossed\n, capacity\n, \"reads\"\n, writes\n, seek_forward\n, seek_back\n, is_san\n, failed\n, mbps\n, mount\n\nfrom pg_catalog.stv_partitions\n), unsorted_by_table as (\n\n  select\n    db_id\n  , id as table_id\n  , name as table_name\n  , sum(rows) as rows\n  , sum(unsorted_rows) as unsorted_rows\n  from __dbt__cte__stv_tbl_perm\n  group by 1, 2, 3\n\n), pg_class as (\n\n  select * from __dbt__cte__pg_class\n\n), pg_namespace as (\n\n  select * from __dbt__cte__pg_namespace\n\n), table_sizes as (\n\n  select\n    tbl as table_id\n  , count(*) as size_in_megabytes\n  from __dbt__cte__stv_blocklist\n  group by 1\n\n), table_attributes as (\n\n  select\n    attrelid as table_id\n  , min(dist_key) as dist_key\n  , min(sort_key) as sort_key\n  , max(attsortkeyord) as num_sort_keys\n  , (max(attencodingtype) > 0) as is_encoded\n  , max(attnum) as num_columns\n  from __dbt__cte__pg_attribute\n  group by 1\n\n), slice_distribution as (\n\n  select\n    tbl as table_id\n  , trim(name) as name\n  , slice\n  , count(*) as size_in_megabytes\n\n  from __dbt__cte__svv_diskusage\n  group by 1, 2, 3\n\n), capacity as (\n\n  select\n    sum(capacity) as total_megabytes\n  from __dbt__cte__stv_partitions\n  where part_begin=0\n\n), table_distribution_ratio as (\n\n  select\n    table_id\n  , (max(size_in_megabytes)::float / min(size_in_megabytes)::float)\n      as ratio\n  from slice_distribution\n  group by 1\n\n)\n\nselect\n\n  trim(pg_namespace.nspname) as schema\n, trim(unsorted_by_table.table_name) as table\n, unsorted_by_table.rows\n, unsorted_by_table.unsorted_rows\n, (case unsorted_by_table.rows\n        when 0 then 0\n        else (unsorted_by_table.unsorted_rows::float / unsorted_by_table.rows::float) * 100.0 end)\n    as percent_rows_unsorted\n, unsorted_by_table.table_id\n\n, decode(pg_class.reldiststyle, 0, 'even',\n                              1, table_attributes.dist_key,\n                              'all') as dist_style\n, table_distribution_ratio.ratio as dist_skew\n\n, (table_attributes.sort_key is not null) as is_sorted\n, table_attributes.sort_key\n, table_attributes.num_sort_keys\n, table_attributes.num_columns\n\n, table_sizes.size_in_megabytes\n, (case capacity.total_megabytes\n        when 0 then 0\n        else (table_sizes.size_in_megabytes::float / capacity.total_megabytes::float) * 100.0 end)\n    as disk_used_percent_of_total\n, table_attributes.is_encoded\n\nfrom unsorted_by_table\n\nleft join pg_class\n  on pg_class.oid = unsorted_by_table.table_id\n\nleft join pg_namespace\n  on pg_namespace.oid = pg_class.relnamespace\n\nleft join capacity\n  on 1=1\n\nleft join table_sizes\n  on unsorted_by_table.table_id = table_sizes.table_id\n\nleft join table_attributes\n  on table_attributes.table_id = unsorted_by_table.table_id\n\nleft join table_distribution_ratio\n  on table_distribution_ratio.table_id = unsorted_by_table.table_id", "relation_name": "\"dev\".\"analytics\".\"redshift_admin_table_stats\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.487684Z", "completed_at": "2024-01-09T22:09:22.517871Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.566693Z", "completed_at": "2024-01-09T22:09:22.566700Z"}], "thread_id": "Thread-7", "execution_time": 0.16425132751464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_course_names", "compiled": true, "compiled_code": "with \ncourse_names as (\n    select * \n    from \"dev\".\"analytics\".\"seed_course_names\"\n)\n\nselect * \nfrom course_names", "relation_name": "\"dev\".\"analytics\".\"dim_course_names\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.490795Z", "completed_at": "2024-01-09T22:09:22.524159Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.569088Z", "completed_at": "2024-01-09T22:09:22.569095Z"}], "thread_id": "Thread-10", "execution_time": 0.16535043716430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.int_school_years", "compiled": true, "compiled_code": "with \nschool_years as (\n    select * \n    from \"dev\".\"analytics\".\"seed_school_years\"\n)\n\nselect * \nfrom school_years\nwhere current_date >= started_at", "relation_name": "\"dev\".\"analytics\".\"int_school_years\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.496345Z", "completed_at": "2024-01-09T22:09:22.531785Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.571072Z", "completed_at": "2024-01-09T22:09:22.571080Z"}], "thread_id": "Thread-9", "execution_time": 0.16420364379882812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_script_names", "compiled": true, "compiled_code": "with \nscript_names as (\n    select * \n    from \"dev\".\"analytics\".\"seed_script_names\"\n)\n\nselect * \nfrom script_names", "relation_name": "\"dev\".\"analytics\".\"dim_script_names\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.501056Z", "completed_at": "2024-01-09T22:09:22.537640Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.574081Z", "completed_at": "2024-01-09T22:09:22.574089Z"}], "thread_id": "Thread-11", "execution_time": 0.1652209758758545, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__followers_follower_id.8675db9e61", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect follower_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__followers\"\nwhere follower_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.518583Z", "completed_at": "2024-01-09T22:09:22.556077Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.580780Z", "completed_at": "2024-01-09T22:09:22.580788Z"}], "thread_id": "Thread-12", "execution_time": 0.15218758583068848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__followers_student_id.d0d21c3ffe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect student_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__followers\"\nwhere student_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.525604Z", "completed_at": "2024-01-09T22:09:22.559830Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.584948Z", "completed_at": "2024-01-09T22:09:22.584955Z"}], "thread_id": "Thread-13", "execution_time": 0.1575477123260498, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_stg_dashboard__followers_follower_id.37c6c5ee61", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    follower_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"stg_dashboard__followers\"\nwhere follower_id is not null\ngroup by follower_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.533792Z", "completed_at": "2024-01-09T22:09:22.562197Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.587300Z", "completed_at": "2024-01-09T22:09:22.587307Z"}], "thread_id": "Thread-14", "execution_time": 0.15327000617980957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_levels", "compiled": true, "compiled_code": "with \nlevels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__levels\"\n)\n\nselect * \nfrom levels", "relation_name": "\"dev\".\"analytics\".\"dim_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.538138Z", "completed_at": "2024-01-09T22:09:22.563568Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.592392Z", "completed_at": "2024-01-09T22:09:22.592401Z"}], "thread_id": "Thread-15", "execution_time": 0.14325356483459473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_school_stats_by_years", "compiled": true, "compiled_code": "-- Note: this data is built using NCES data recevied\n\nwith \nschool_stats_by_years as (\n    select \n        *,\n\n        -- pre-process these totals here\n        sum(count_student_am \n            + count_student_hi\n            + count_student_bl\n            + count_student_hp)\n        as total_urg_no_tr_students,\n\n        sum(count_student_am\n            + count_student_hi\n            + count_student_bl\n            + count_student_hp\n            + count_student_tr)\n         as total_urg_students,\n\n        sum(count_student_am  \n            + count_student_as  \n            + count_student_hi  \n            + count_student_bl  \n            + count_student_wh  \n            + count_student_hp\n            + count_student_tr)\n        as total_students_calculated\n\n    from \"dev\".\"analytics\".\"stg_dashboard__school_stats_by_years\"\n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40\n),\n\ncombined as (\n    select \n        *,\n\n        -- calculations \n        total_urg_students / nullif(total_students_calculated,0)::float as urg_percent,\n\n        total_urg_no_tr_students / nullif(total_students_calculated,0)::float as urg_no_tr_percent,\n\n        -- case when total_students_calculated / total_students >= .7\n        --      then total_urg_students / total_students_calculated\n        -- end as urg_percent_true,\n        \n        total_frl_eligible_students / nullif(total_students,0)::float as frl_eligible_percent\n\n    from school_stats_by_years\n)\n\nselect *\nfrom combined", "relation_name": "\"dev\".\"analytics\".\"dim_school_stats_by_years\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.542512Z", "completed_at": "2024-01-09T22:09:22.564817Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.593808Z", "completed_at": "2024-01-09T22:09:22.593815Z"}], "thread_id": "Thread-16", "execution_time": 0.13455533981323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_stg_dashboard__school_stats_by_years_school_id__school_year.2ac6586976", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        school_id, school_year\n    from \"dev\".\"analytics\".\"stg_dashboard__school_stats_by_years\"\n    group by school_id, school_year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.587960Z", "completed_at": "2024-01-09T22:09:22.616240Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.650501Z", "completed_at": "2024-01-09T22:09:22.650510Z"}], "thread_id": "Thread-1", "execution_time": 0.11664748191833496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__school_stats_by_years_school_id.7dce256f1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect school_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__school_stats_by_years\"\nwhere school_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.595892Z", "completed_at": "2024-01-09T22:09:22.621045Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.660949Z", "completed_at": "2024-01-09T22:09:22.660960Z"}], "thread_id": "Thread-2", "execution_time": 0.13690972328186035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_schools", "compiled": true, "compiled_code": "-- Model: dim_schools\n-- Scope: all dimensions we have/need for schools; one row per school + school_year\nwith\nschools as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__schools\"\n),\n\nschool_districts as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__school_districts\"\n),\n\nschool_stats_by_years as (\n    select *, row_number() over(partition by school_id order by school_year desc) as row_num\n    from \"dev\".\"analytics\".\"stg_dashboard__school_stats_by_years\"\n),\n\ncombined as (\n    select\n        -- schools\n        schools.school_id,\n        schools.city,\n        schools.state,\n        schools.zip,\n        school_stats_by_years.school_year,\n        school_stats_by_years.is_stage_el,\n        school_stats_by_years.is_stage_mi,\n        school_stats_by_years.is_stage_hi,\n        (\n            (case when school_stats_by_years.is_stage_el = 1 then 'el' else '__' end ) ||\n            (case when school_stats_by_years.is_stage_mi = 1 then 'mi' else '__' end ) ||\n            (case when school_stats_by_years.is_stage_hi = 1 then 'hi' else '__' end ) \n        ) as school_level_simple,\n        school_stats_by_years.is_rural,\n        school_stats_by_years.is_title_i,\n        school_stats_by_years.community_type,\n        schools.school_category,\n        schools.school_name,\n        schools.school_type,\n        case when total_frl_eligible_students / total_students::float > 0.5\n            then 1 else 0 \n        end as is_high_needs,\n        schools.last_known_school_year_open,\n\n        --school_districts\n        school_districts.school_district_id,\n        school_districts.school_district_name,\n\n        -- nces school metrics\n        school_stats_by_years.total_students,\n        school_stats_by_years.count_student_am,\n        school_stats_by_years.count_student_as,\n        school_stats_by_years.count_student_hi,\n        school_stats_by_years.count_student_bl,\n        school_stats_by_years.count_student_wh,\n        school_stats_by_years.count_student_hp,\n        school_stats_by_years.count_student_tr,\n        school_stats_by_years.total_frl_eligible_students,\n\n        nullif(\n            sum(school_stats_by_years.count_student_am \n                + school_stats_by_years.count_student_hi\n                + school_stats_by_years.count_student_bl\n                + school_stats_by_years.count_student_hp)\n            ,0) as total_urg_no_tr_students,\n\n        nullif(\n            sum(school_stats_by_years.count_student_am\n                + school_stats_by_years.count_student_hi\n                + school_stats_by_years.count_student_bl\n                + school_stats_by_years.count_student_hp\n                + school_stats_by_years.count_student_tr)\n            ,0) as total_urg_students,\n\n        nullif(\n            sum(school_stats_by_years.count_student_am  \n                + school_stats_by_years.count_student_as  \n                + school_stats_by_years.count_student_hi  \n                + school_stats_by_years.count_student_bl  \n                + school_stats_by_years.count_student_wh  \n                + school_stats_by_years.count_student_hp\n                + school_stats_by_years.count_student_tr)\n            ,0) as total_students_calculated,\n        \n        -- calculations \n        total_urg_students / total_students_calculated::float as urg_percent,\n\n        total_urg_no_tr_students / total_students_calculated::float as urg_no_tr_percent,\n        \n        total_frl_eligible_students / total_students::float as frl_eligible_percent,\n        \n        -- dates \n        min(schools.created_at) as school_created_at,\n        max(schools.updated_at) as school_last_updated_at\n    from schools\n    left join school_stats_by_years\n        on schools.school_id = school_stats_by_years.school_id\n        and school_stats_by_years.row_num = 1\n    left join school_districts\n        on schools.school_district_id = school_districts.school_district_id\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28\n)\n\nselect *\nfrom combined", "relation_name": "\"dev\".\"analytics\".\"dim_schools\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.603257Z", "completed_at": "2024-01-09T22:09:22.625264Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.676458Z", "completed_at": "2024-01-09T22:09:22.676467Z"}], "thread_id": "Thread-3", "execution_time": 0.16183042526245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__schools_school_id.dca2bd97dd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect school_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__schools\"\nwhere school_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.608573Z", "completed_at": "2024-01-09T22:09:22.625769Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.677198Z", "completed_at": "2024-01-09T22:09:22.677206Z"}], "thread_id": "Thread-6", "execution_time": 0.1615443229675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_stg_dashboard__schools_school_id.a9b6308569", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    school_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"stg_dashboard__schools\"\nwhere school_id is not null\ngroup by school_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.629943Z", "completed_at": "2024-01-09T22:09:22.656510Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.749725Z", "completed_at": "2024-01-09T22:09:22.749734Z"}], "thread_id": "Thread-4", "execution_time": 0.1665782928466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__sections_section_id.7d8448a05a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect section_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__sections\"\nwhere section_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.638160Z", "completed_at": "2024-01-09T22:09:22.666231Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.753823Z", "completed_at": "2024-01-09T22:09:22.753830Z"}], "thread_id": "Thread-5", "execution_time": 0.16430020332336426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_stg_dashboard__sections_section_id.55d1fb278a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    section_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"stg_dashboard__sections\"\nwhere section_id is not null\ngroup by section_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.646698Z", "completed_at": "2024-01-09T22:09:22.681150Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.760051Z", "completed_at": "2024-01-09T22:09:22.760059Z"}], "thread_id": "Thread-8", "execution_time": 0.15662264823913574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_user_stages", "compiled": true, "compiled_code": "with\nuser_levels as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__user_levels\"\n),\n\nlevels_script_levels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__levels_script_levels\"\n),\n\nscript_levels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__script_levels\"\n),\n\nstages as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__stages\"\n),\n\nlevels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__levels\"\n    where type != 'StandaloneVideo'\n    -- excludes problematic levels shared across the multiple stages in the same script, which we can't differentiate\n),\n\ncourse_scripts as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__course_scripts\"\n),\n\nfinal as (\n    select \n        ul.user_id, \n        cs.course_id, \n        sl.script_id, \n        st.stage_id, \n        st.absolute_position      as stage_number, \n        count(*)                  as levels_attempted,\n        min(ul.created_at)::date  as stage_started_at,\n        max(ul.updated_at)        as updated_at\n    from user_levels ul\n    join levels_script_levels lsl on lsl.level_id = ul.level_id\n    join script_levels sl on sl.script_level_id = lsl.script_level_id and sl.script_id = ul.script_id\n    join stages st on st.stage_id = sl.stage_id\n    join levels le on le.level_id = lsl.level_id\n    left join course_scripts cs on cs.script_id = ul.script_id\n    group by 1,2,3,4,5\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"dim_user_stages\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.651989Z", "completed_at": "2024-01-09T22:09:22.703480Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.762298Z", "completed_at": "2024-01-09T22:09:22.762306Z"}], "thread_id": "Thread-7", "execution_time": 0.15657901763916016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_stg_dashboard__user_levels_user_level_id.1a9bb0d738", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_level_id\nfrom \"dev\".\"analytics\".\"stg_dashboard__user_levels\"\nwhere user_level_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.657018Z", "completed_at": "2024-01-09T22:09:22.717301Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.764485Z", "completed_at": "2024-01-09T22:09:22.764492Z"}], "thread_id": "Thread-10", "execution_time": 0.15706443786621094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_stg_dashboard__user_levels_user_level_id.850f4f8bc6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_level_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"stg_dashboard__user_levels\"\nwhere user_level_id is not null\ngroup by user_level_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.662231Z", "completed_at": "2024-01-09T22:09:22.732268Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.766840Z", "completed_at": "2024-01-09T22:09:22.766847Z"}], "thread_id": "Thread-9", "execution_time": 0.1576402187347412, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_forms", "compiled": true, "compiled_code": "with \nforms as (\n    select * \n    from \"dev\".\"analytics\".\"stg_pegasus_pii__forms\"\n),\n\nform_geos as (\n    select * \n    from \"dev\".\"analytics\".\"stg_pegasus_pii__form_geos\"\n),\n\ncombined as (\n    select \n        forms.form_id,\n        forms.form_category,\n        forms.hoc_year,\n        forms.email,\n        forms.name,\n        forms.form_kind,\n        forms.updated_at,\n        forms.indexed_at,\n        forms.review,\n        forms.reviewed_by,\n        forms.reviewed_at,\n        forms.processed_at,\n        forms.notified_at,\n        forms.user_id,\n        forms.parent_id,\n        forms.location_country_code,\n        coalesce(forms.city,form_geos.city)                     as city,\n        coalesce(forms.state,form_geos.state)                   as state,\n        coalesce(forms.country,form_geos.country)               as country,\n        max(forms.created_at)                                   as registered_at,\n        max(coalesce(forms.updated_at,forms.created_at))        as last_updated_at\n    from forms \n    left join form_geos \n        on forms.form_id = form_geos.form_id\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n)\n\nselect * \nfrom combined", "relation_name": "\"dev\".\"analytics\".\"dim_forms\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.666950Z", "completed_at": "2024-01-09T22:09:22.735725Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.769222Z", "completed_at": "2024-01-09T22:09:22.769230Z"}], "thread_id": "Thread-11", "execution_time": 0.15775680541992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.redshift.redshift_admin_queries", "compiled": true, "compiled_code": "with  __dbt__cte__stl_query as (\nselect\n\n  userid as user_id\n, query as query_id\n, xid as transaction_id\n, label\n, pid\n, database\n, starttime as started_at\n, endtime as finished_at\n, aborted\n\nfrom pg_catalog.stl_query\n),  __dbt__cte__pg_user as (\nselect\n\n  usesysid as user_id\n, usename as username\n\nfrom pg_catalog.pg_user\n),  __dbt__cte__stl_explain as (\nselect\n\n  userid as user_id\n, query as query_id\n, nodeid\n, parentid\n, plannode\n, info\n\nfrom pg_catalog.stl_explain\n),  __dbt__cte__redshift_cost as (\nwith stl_explain as (\n\n  select query_id, plannode from __dbt__cte__stl_explain\n  where nodeid = 1\n\n), parse_step_one as (\n\n  -- plannode (which contains cost) is formatted like:\n  --   XN Seq Scan on nyc_last_update  (cost=0.00..0.03 rows=2 width=40)\n  -- we want to rip out the cost part (0.00, 0.03) and make it usable.\n  -- cost_string after this step is \"0.00..0.03 ...\"\n  select\n    query_id\n  , split_part(plannode, 'cost=', 2) as cost_string\n\n  from stl_explain\n\n), parse_step_two as (\n\n  select\n    query_id\n  , split_part(cost_string, '..', 1) as starting_cost\n  , substring(\n      split_part(cost_string, '..', 2)\n      from 1\n      for strpos(split_part(cost_string, '..', 2), ' ')) as total_cost\n\n  from parse_step_one\n\n)\n\n\nselect\n\n  query_id\n, starting_cost::float as starting_cost\n, total_cost::float as total_cost\n\nfrom parse_step_two\n),  __dbt__cte__stl_wlm_query as (\nselect\n\n  userid as user_id\n, query as query_id\n, xid\n, task\n, service_class\n, slot_count\n, service_class_start_time\n, queue_start_time\n, queue_end_time\n, total_queue_time\n, exec_start_time\n, exec_end_time\n, total_exec_time\n, service_class_end_time\n, final_state\n\nfrom pg_catalog.stl_wlm_query\n), queries as (\n\n  select * from __dbt__cte__stl_query\n\n), users as (\n\n  select * from __dbt__cte__pg_user\n\n), cost as (\n\n  select * from __dbt__cte__redshift_cost\n\n), timings as (\n\n  select * from __dbt__cte__stl_wlm_query\n\n)\n\n\n\nselect\n\n  queries.query_id\n, queries.transaction_id\n, users.username::varchar\n\n, cost.starting_cost\n, cost.total_cost\n\n, queries.started_at\n, queries.finished_at\n\n, timings.queue_start_time\n, timings.queue_end_time\n, (timings.total_queue_time::float / 1000000.0) as total_queue_time_seconds\n\n, timings.exec_start_time\n, timings.exec_end_time\n, (timings.total_exec_time::float / 1000000.0) as total_exec_time_seconds\n\nfrom queries\n\nleft join users\n  on queries.user_id = users.user_id\n\nleft join cost\n  on queries.query_id = cost.query_id\n\nleft join timings\n  on queries.query_id = timings.query_id", "relation_name": "\"dev\".\"analytics\".\"redshift_admin_queries\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.736306Z", "completed_at": "2024-01-09T22:09:22.758541Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.788125Z", "completed_at": "2024-01-09T22:09:22.788135Z"}], "thread_id": "Thread-14", "execution_time": 0.16297554969787598, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.int_teacher_schools_historical", "compiled": true, "compiled_code": "\n\nwith \nuser_school_infos as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard_pii__user_school_infos\"\n),\n\nschool_infos as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__school_infos\"\n),\n\nschool_years as (\n    select *\n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\nuser_school_infos_sy as (\n    select \n        usi.user_id,\n        sy.school_year as started_at_sy,\n        row_number() over (partition by usi.user_id, sy.school_year order by usi.started_at desc) as row_num,\n        usi.school_info_id,\n        si.school_id,\n        usi.started_at,\n        usi.ended_at\n    from user_school_infos usi\n    left join school_infos si \n        on usi.school_info_id = si.school_info_id\n    join school_years sy \n        on usi.started_at between sy.started_at and sy.ended_at\n),\n\nfinal as (\n    select \n        usi_sy.user_id as teacher_id,\n        usi_sy.started_at_sy,\n        usi_sy.started_at, \n        usi_sy.ended_at,\n        usi_sy.school_info_id,\n        usi_sy.school_id\n    from user_school_infos_sy as usi_sy \n    where row_num = 1\n    order by started_at_sy\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"int_teacher_schools_historical\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.739679Z", "completed_at": "2024-01-09T22:09:22.759219Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.788812Z", "completed_at": "2024-01-09T22:09:22.788820Z"}], "thread_id": "Thread-15", "execution_time": 0.16348052024841309, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_course_structure", "compiled": true, "compiled_code": "\n\nwith \nscripts as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__scripts\" \n),\n\nlevels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__levels\"\n    ),\n\nstages as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__stages\"\n),\n\nscript_levels as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__script_levels\"\n),\n\nlevels_script_levels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__levels_script_levels\"\n),\n\ncourse_scripts as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__course_scripts\"\n),\n\nunit_groups as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__unit_groups\"\n),\n\ncourse_names as (\n    select *\n    from \"dev\".\"analytics\".\"dim_course_names\"\n),\n\nscript_names as (\n    select * \n    from \"dev\".\"analytics\".\"dim_script_names\" \n),\n\ncombined as (\n    select \n        -- courses\n        ug.unit_group_id as course_id,\n        ug.name as course_name,\n        cn.course_name_short,\n        cn.course_name_long,\n        sc.course_name_true,\n\n        -- scripts\n        sl.script_id,\n        sc.script_name,\n        sn.versioned_script_name,\n        sn.script_name_short,\n        sn.script_name_long,\n        \n        -- stages\n        st.stage_id,\n        st.stage_name,\n        st.stage_number,\n\n        -- levels\n        case when sl.script_id = '26' \n              and lsl.level_id = '14633' \n             then 1 else lsl.level_id \n        end as level_id,\n        lev.name as level_name,\n        sl.position as level_number,\n        rank() over(partition by sl.script_id order by st.stage_number, sl.position) as level_script_order,\n        sl.is_assessment,\n        lev.updated_at\n    from levels_script_levels as lsl \n    join script_levels as sl \n        on lsl.script_level_id = sl.script_level_id\n    join levels as lev\n        on lsl.level_id = lev.level_id  \n    join scripts as sc \n        on sl.script_id = sc.script_id\n    join stages as st \n        on sl.stage_id = st.stage_id \n    left join course_scripts as cs \n        on sc.script_id = cs.script_id\n    left join unit_groups as ug \n        on cs.course_id = ug.unit_group_id\n    left join course_names as cn \n        on ug.unit_group_id = cn.versioned_course_id   \n    left join script_names as sn \n        on sc.script_id = sn.versioned_script_id\n)\n\nselect * \nfrom combined", "relation_name": "\"dev\".\"analytics\".\"dim_course_structure\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.744839Z", "completed_at": "2024-01-09T22:09:22.761790Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.790461Z", "completed_at": "2024-01-09T22:09:22.790469Z"}], "thread_id": "Thread-16", "execution_time": 0.16063475608825684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_script_names_versioned_script_id.20b063a296", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect versioned_script_id\nfrom \"dev\".\"analytics\".\"dim_script_names\"\nwhere versioned_script_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.783103Z", "completed_at": "2024-01-09T22:09:22.810091Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.862395Z", "completed_at": "2024-01-09T22:09:22.862405Z"}], "thread_id": "Thread-1", "execution_time": 0.1346144676208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_script_names_versioned_script_id.139446433d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    versioned_script_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_script_names\"\nwhere versioned_script_id is not null\ngroup by versioned_script_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.791896Z", "completed_at": "2024-01-09T22:09:22.815698Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.874396Z", "completed_at": "2024-01-09T22:09:22.874406Z"}], "thread_id": "Thread-2", "execution_time": 0.13488197326660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_levels_level_id.1f8c5dc9a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect level_id\nfrom \"dev\".\"analytics\".\"dim_levels\"\nwhere level_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.798185Z", "completed_at": "2024-01-09T22:09:22.821801Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.883394Z", "completed_at": "2024-01-09T22:09:22.883405Z"}], "thread_id": "Thread-3", "execution_time": 0.13518166542053223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_levels_level_id.5eefad6abc", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    level_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_levels\"\nwhere level_id is not null\ngroup by level_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.802735Z", "completed_at": "2024-01-09T22:09:22.826370Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.891163Z", "completed_at": "2024-01-09T22:09:22.891174Z"}], "thread_id": "Thread-6", "execution_time": 0.13646388053894043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_dim_school_stats_by_years_school_year__school_id.572288f478", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        school_year, school_id\n    from \"dev\".\"analytics\".\"dim_school_stats_by_years\"\n    group by school_year, school_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.835043Z", "completed_at": "2024-01-09T22:09:22.873780Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.912657Z", "completed_at": "2024-01-09T22:09:22.912667Z"}], "thread_id": "Thread-4", "execution_time": 0.1274702548980713, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_schools_school_id.baadfc6c97", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect school_id\nfrom \"dev\".\"analytics\".\"dim_schools\"\nwhere school_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.848784Z", "completed_at": "2024-01-09T22:09:22.882631Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.913613Z", "completed_at": "2024-01-09T22:09:22.913620Z"}], "thread_id": "Thread-5", "execution_time": 0.1207127571105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_schools_school_id.50ab1b294e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    school_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_schools\"\nwhere school_id is not null\ngroup by school_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.866886Z", "completed_at": "2024-01-09T22:09:22.901935Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.919045Z", "completed_at": "2024-01-09T22:09:22.919052Z"}], "thread_id": "Thread-8", "execution_time": 0.1105496883392334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_dim_user_stages_user_id__course_id__script_id__stage_id.e3e2e91a12", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, course_id, script_id, stage_id\n    from \"dev\".\"analytics\".\"dim_user_stages\"\n    group by user_id, course_id, script_id, stage_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.877861Z", "completed_at": "2024-01-09T22:09:22.905618Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.920761Z", "completed_at": "2024-01-09T22:09:22.920768Z"}], "thread_id": "Thread-7", "execution_time": 0.10477447509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_forms_form_id.51d004ca2c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect form_id\nfrom \"dev\".\"analytics\".\"dim_forms\"\nwhere form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.886978Z", "completed_at": "2024-01-09T22:09:22.906851Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.922017Z", "completed_at": "2024-01-09T22:09:22.922024Z"}], "thread_id": "Thread-10", "execution_time": 0.10388779640197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_forms_form_id.3c980f09d6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    form_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_forms\"\nwhere form_id is not null\ngroup by form_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.907518Z", "completed_at": "2024-01-09T22:09:22.919542Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:22.927930Z", "completed_at": "2024-01-09T22:09:22.927940Z"}], "thread_id": "Thread-9", "execution_time": 0.0638723373413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_student_courses", "compiled": true, "compiled_code": "/* \nUpdated 12/6/23:\n\n1. Design:\n    student_id int,\n    school_year varchar(10),\n    course_name varchar(3),\n    last_activity_at timestamp\n\n2. Definitions:\n    - a student is included in this table if they attempted a level of a given course within a given SY\n    - this table is used to determine \"active\" students within a section and assigning a \"section_status\"\n\n3. Sources:\n    dim_user_levels\n    course_structure\n    school_years\n\nRef: dataops-316\n*/\n\nwith \nuser_levels as (\n    select \n        user_id,\n        level_id,\n        script_id,\n        created_at\n    from \"dev\".\"analytics\".\"stg_dashboard__user_levels\"\n),\n\ncourse_structure as (\n    select  \n        course_name_true, \n        level_id, \n        script_id \n    from \"dev\".\"analytics\".\"dim_course_structure\"\n),\n\nschool_years as (\n    select *\n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\ncombined as (\n    select \n         ul.user_id             as student_id\n\t\t,sy.school_year\n\t\t,cs.course_name_true    as course_name\n        ,min(ul.created_at)     as first_activity_at \n\t\t,max(ul.created_at)     as last_activity_at\n\tfrom user_levels ul \n\tjoin course_structure cs\n\t\ton ul.script_id = cs.script_id \n        and ul.level_id = cs.level_id \n\tjoin school_years sy \n\t\ton ul.created_at \n            between sy.started_at and sy.ended_at\n    group by 1,2,3\n)\n\nselect *\nfrom combined", "relation_name": "\"dev\".\"analytics\".\"dim_student_courses\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.717810Z", "completed_at": "2024-01-09T22:09:23.117134Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.118414Z", "completed_at": "2024-01-09T22:09:23.118425Z"}], "thread_id": "Thread-13", "execution_time": 0.49491381645202637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_teachers", "compiled": true, "compiled_code": "with \nteachers as (\n    select \n    \"teacher_id\",\n  \"studio_person_id\",\n  \"user_type\",\n  \"age_years\",\n  \"gender\",\n  \"locale\",\n  \"sign_in_count\",\n  \"school_info_id\",\n  \"total_lines\",\n  \"current_sign_in_at\",\n  \"last_sign_in_at\",\n  \"created_at\",\n  \"updated_at\",\n  \"purged_at\"\n    from \"dev\".\"analytics\".\"stg_dashboard__users\"\n    where teacher_id is not null \n),\n\nuser_geos as (\n    select \n        user_id, \n        is_international\n    from \"dev\".\"analytics\".\"stg_dashboard__user_geos\"\n    where user_id in (select teacher_id from teachers)\n),\n\nuser_school_infos as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard_pii__user_school_infos\"\n),\n\nschool_infos as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__school_infos\"\n), \n\nschool_years as (\n    select * \n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\n-- get teacher NCES school_id association\nteacher_schools as (\n    select \n        teachers.teacher_id,\n        si.school_id,\n        rank () over (partition by teachers.teacher_id order by si.school_id, usi.ended_at desc) rnk\n    from teachers\n    left join user_school_infos as usi    \n        on usi.user_id = teachers.teacher_id\n    left join school_infos as si \n        on si.school_info_id = usi.school_info_id\n    where si.school_id is not null\n),\n\nteacher_latest_school as (\n    select \n        teacher_id,\n        school_id\n    from teacher_schools\n    where rnk = 1\n)\n\nselect \n    teachers.*, \n    school_years.school_year as created_at_school_year,\n    tls.school_id,\n    user_geos.is_international\nfrom teachers \njoin user_geos \n    on teachers.teacher_id = user_geos.user_id\nleft join teacher_latest_school tls \n    on tls.teacher_id = user_geos.user_id\nleft join school_years \n    on teachers.created_at between school_years.started_at and school_years.ended_at", "relation_name": "\"dev\".\"analytics\".\"dim_teachers\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:22.681930Z", "completed_at": "2024-01-09T22:09:23.132287Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.133501Z", "completed_at": "2024-01-09T22:09:23.133509Z"}], "thread_id": "Thread-12", "execution_time": 0.5246200561523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_students", "compiled": true, "compiled_code": "with \nstudents as (\n    select \n    \"student_id\",\n  \"user_type\",\n  \"gender\",\n  \"is_urg\",\n  \"locale\",\n  \"sign_in_count\",\n  \"school_info_id\",\n  \"total_lines\",\n  \"current_sign_in_at\",\n  \"last_sign_in_at\",\n  \"created_at\",\n  \"updated_at\",\n  \"purged_at\"\n    from \"dev\".\"analytics\".\"stg_dashboard__users\"\n    where student_id is not null \n),\n\nuser_geos as (\n    select \n        user_id, \n        is_international\n    from \"dev\".\"analytics\".\"stg_dashboard__user_geos\"\n    where user_id in (select student_id from students)\n),\n\nschool_years as (\n    select * from \"dev\".\"analytics\".\"int_school_years\"\n),\n\nfinal as (\nselect \n    students.*, \n    user_geos.is_international,\n    sy.school_year created_at_school_year\nfrom students \njoin user_geos \n    on students.student_id = user_geos.user_id\nleft join school_years sy on students.created_at between sy.started_at and sy.ended_at\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"dim_students\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.144983Z", "completed_at": "2024-01-09T22:09:23.161216Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.163507Z", "completed_at": "2024-01-09T22:09:23.163516Z"}], "thread_id": "Thread-14", "execution_time": 0.02501225471496582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.int_section_mapping", "compiled": true, "compiled_code": "/* \n1. Design:\n    school_year\n    student_id\n    teacher_id\n    section_id\n\n2. Definitions:\n    this table provides mapping across these foreign keys, \n    serving as an intermediary (xref) model\n\n3. Sources:\n\nRef: DATAOPS-321 */\n\nwith \nschool_years as (\n    select *\n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\nfollowers as (\n    select *\n    from \"dev\".\"analytics\".\"stg_dashboard__followers\"\n),\n\nteachers as (\n    select distinct \n        teacher_id,\n        school_id\n    from \"dev\".\"analytics\".\"dim_teachers\"\n),\n\nsections as (\n    select distinct \n        user_id,\n        section_id\n    from \"dev\".\"analytics\".\"stg_dashboard__sections\"\n),\n\ncombined as (\n    select \n        sy.school_year, \n        followers.student_id,\n        sections.user_id            as teacher_id,\n        sections.section_id         as section_id,\n        teachers.school_id,\n        row_number() over(\n            partition by \n                followers.student_id, \n                sy.school_year\n                order by \n                    followers.created_at\n        ) as row_num\n\n    from followers  \n    left join sections \n        on followers.section_id = sections.section_id\n    left join teachers \n        on sections.user_id = teachers.teacher_id\n    join school_years as sy \n        on followers.created_at \n            between sy.started_at and sy.ended_at\n),\n\nfinal as (\n    select \n        student_id,\n        school_year,\n        section_id,\n        teacher_id,\n        school_id\n    from combined\n    where row_num = 1\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"int_section_mapping\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.149690Z", "completed_at": "2024-01-09T22:09:23.162996Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.167751Z", "completed_at": "2024-01-09T22:09:23.167758Z"}], "thread_id": "Thread-15", "execution_time": 0.031914710998535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_teachers_teacher_id.c414c8c807", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect teacher_id\nfrom \"dev\".\"analytics\".\"dim_teachers\"\nwhere teacher_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.154673Z", "completed_at": "2024-01-09T22:09:23.164747Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.176364Z", "completed_at": "2024-01-09T22:09:23.176372Z"}], "thread_id": "Thread-16", "execution_time": 0.03990960121154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_teachers_teacher_id.55db8b21ab", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    teacher_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_teachers\"\nwhere teacher_id is not null\ngroup by teacher_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.183839Z", "completed_at": "2024-01-09T22:09:23.209269Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.217572Z", "completed_at": "2024-01-09T22:09:23.217582Z"}], "thread_id": "Thread-1", "execution_time": 0.05153369903564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.int_user_levels", "compiled": true, "compiled_code": "-- int_user_levels\n\nwith \nuser_levels as (\n    select * \n    from \"dev\".\"analytics\".\"stg_dashboard__user_levels\"\n),\n\nstudents as (\n    select * \n    from \"dev\".\"analytics\".\"dim_students\"\n    where student_id in (select user_id from user_levels)\n),\n\nfinal as (\n    select \n        distinct user_levels.user_id,\n        students.is_international,\n        user_levels.level_id,\n        user_levels.script_id\n    from user_levels \n    join students \n        on user_levels.user_id = students.student_id \n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"int_user_levels\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.187753Z", "completed_at": "2024-01-09T22:09:23.210315Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.218258Z", "completed_at": "2024-01-09T22:09:23.218268Z"}], "thread_id": "Thread-2", "execution_time": 0.05118083953857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.not_null_dim_students_student_id.10ef5e35c7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect student_id\nfrom \"dev\".\"analytics\".\"dim_students\"\nwhere student_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.191694Z", "completed_at": "2024-01-09T22:09:23.211270Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.220273Z", "completed_at": "2024-01-09T22:09:23.220281Z"}], "thread_id": "Thread-3", "execution_time": 0.05133628845214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.unique_dim_students_student_id.02754676d0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    student_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"analytics\".\"dim_students\"\nwhere student_id is not null\ngroup by student_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.199466Z", "completed_at": "2024-01-09T22:09:23.212018Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.220968Z", "completed_at": "2024-01-09T22:09:23.220976Z"}], "thread_id": "Thread-5", "execution_time": 0.049805402755737305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.int_active_sections", "compiled": true, "compiled_code": "\n\nwith\nstudent_section as (\n    select *\n    from \"dev\".\"analytics\".\"int_section_mapping\"\n),\n\nstudent_course_starts as (\n    select *\n    from \"dev\".\"analytics\".\"dim_student_courses\"\n    where student_id in (select student_id from student_section)\n),\n\ncombined as (\n    select \n         ss.teacher_id\n\t\t,ss.school_year\n\t\t,scs.course_name\n\t\t,ss.section_id\n        ,min(scs.first_activity_at) as section_started_at\n\t\t,count(distinct ss.student_id) as num_students \n\tfrom student_course_starts scs\n\tjoin student_section ss \n\ton scs.student_id = ss.student_id \n    and scs.school_year = ss.school_year \n\tgroup by 1,2,3,4\n),\n\nfinal as (\n    select \n         teacher_id\n        ,school_year\n        ,course_name\n        ,section_id\n        ,section_started_at\n        ,num_students\n    from combined\n    where num_students >= 5\n)\n\nselect *\nfrom final", "relation_name": "\"dev\".\"analytics\".\"int_active_sections\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.195643Z", "completed_at": "2024-01-09T22:09:23.212813Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.221654Z", "completed_at": "2024-01-09T22:09:23.221661Z"}], "thread_id": "Thread-6", "execution_time": 0.05272626876831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_student_status", "compiled": true, "compiled_code": "/*\n\nDesign: 1 row per student, school_year, churn_status\nLogic: we can determine status based on three properties we can compute for every user|school_year as a binary:\n    - 0/1 they are active this school_year - (A)ctive\n    - 0/1 they were active in the previous school_year - (P)rev year\n    - 0/1 they have ever been active in ANY school_year prior, incl. prev year - (E)ver before\n\n    Rather than write out long complicated combinational logic in code, these 3 values can be combined \n    into an ordered 3-char string representing the concatenated true/false combinations for Active|Prev|Ever \n    e.g. \"101\" means: ( Active = true AND Prev year = false AND Ever before = true )\n    To practice some defensive programming, we'll handle all cases exhaustively and return a \n    sentinal '<impossible status>' value as a fast-fail value for cases that we believe to be impossible.\n\n    - '000' (0) = 'market'              -- Not active now + never been active\n    - '001' (1) = 'inactive churn'      -- NOT active + NOT active prev year + active ever before\n    - '010' (2) = '<impossible status>' -- should not be possible, active in the prev year should imply active ever before\n    - '011' (3) = 'inactive this year'  -- NOT active + active prev year + (active ever before implied)\n    - '100' (4) = 'active new'          -- active this year + NOT active last year + NOT active ever before\n    - '101' (5) = 'active reacquired'   -- Active this year + NOT active last year + active in the past\n    - '110' (6) = '<impossible status>' -- impossible for same reason as status (2)\n    - '111' (7) = 'active retained'     -- active this year + active last year + (active ever before implied)\n\n*/\n\nwith \n\nstudent_courses_started as (\n\n    select\n        student_id,\n        school_year,\n        listagg(distinct course_name, ', ') within group (order by course_name ASC) courses_started\n    from \"dev\".\"analytics\".\"dim_student_courses\"\n    group by 1, 2\n\n),\n\nall_student_users as (\n\n    select\n        student_id,\n        created_at\n    from \"dev\".\"analytics\".\"dim_students\"\n\n), \n\nschool_years as (\n\n    select * from \"dev\".\"analytics\".\"int_school_years\"\n\n), \n\nall_students_school_years as (\n\n    select\n        u.student_id,\n        sy.school_year\n    from all_student_users u\n    join school_years sy on u.created_at <= sy.ended_at\n    where sy.started_at < current_timestamp\n\n), \n\nactive_status_simple as (\n\n    select\n        all_sy.student_id,\n        all_sy.school_year,\n        case when s.student_id is null then 0 else 1 end as is_active,\n        s.courses_started\n\n    from all_students_school_years all_sy\n    left join student_courses_started s on s.student_id = all_sy.student_id and s.school_year = all_sy.school_year\n\n), \n\nfull_status as (\n    -- Determine the active status for each student in each year\n\n    select\n        student_id,\n        school_year,\n        is_active,\n        courses_started,\n        coalesce(\n            lag(is_active, 1) \n                over (partition by student_id order by school_year) \n            , 0\n        ) as prev_year_active,\n        coalesce( --force any NULL to be 0 for this function\n            max(is_active) \n                over (partition by student_id order by school_year rows between unbounded preceding and 1 preceding)\n            , 0\n        ) as ever_active_before,\n        (is_active || prev_year_active || ever_active_before) status_code\n    from\n        active_status_simple\n\n), \n\ncurrent_school_year as (\n\n    select \n        school_year\n    from \"dev\".\"analytics\".\"int_school_years\"\n    where current_date between started_at and ended_at\n\n)\n\nselect\n    student_id,\n    school_year,\n    --is_active,\n    --prev_year_active,\n    --ever_active_before,\n    --status_code,\n    case \n        when status_code = '000' then 'market'\n        when status_code = '001' then 'inactive churn'\n        when status_code = '010' then '<impossible status>'\n        when status_code = '011' then 'inactive this year'\n        when status_code = '100' then 'active new'\n        when status_code = '101' then 'active reacquired'\n        when status_code = '110' then '<impossible status>'\n        when status_code = '111' then 'active retained'\n    end as status,\n    courses_started\nfrom\n    full_status\norder by\n    student_id, school_year", "relation_name": "\"dev\".\"analytics\".\"dim_student_status\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.202624Z", "completed_at": "2024-01-09T22:09:23.214808Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.224881Z", "completed_at": "2024-01-09T22:09:23.224889Z"}], "thread_id": "Thread-8", "execution_time": 0.051049232482910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_int_section_mapping_student_id__school_year__section_id__teacher_id__school_id.1fd3b5f84d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        student_id, school_year, section_id, teacher_id, school_id\n    from \"dev\".\"analytics\".\"int_section_mapping\"\n    group by student_id, school_year, section_id, teacher_id, school_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.241185Z", "completed_at": "2024-01-09T22:09:23.260659Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.265272Z", "completed_at": "2024-01-09T22:09:23.265281Z"}], "thread_id": "Thread-3", "execution_time": 0.03459525108337402, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_int_user_levels_user_id__level_id__script_id.b41082019b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, level_id, script_id\n    from \"dev\".\"analytics\".\"int_user_levels\"\n    group by user_id, level_id, script_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.246061Z", "completed_at": "2024-01-09T22:09:23.261548Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.268113Z", "completed_at": "2024-01-09T22:09:23.268121Z"}], "thread_id": "Thread-9", "execution_time": 0.036809444427490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_school_status", "compiled": true, "compiled_code": "\n\nwith \n\nall_schools as (\n    select school_id\n    from \"dev\".\"analytics\".\"dim_schools\"\n),\n\nschool_years as (\n    select * \n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\nall_schools_sy as (\n    select \n        all_schools.school_id,\n        school_years.school_year\n    from all_schools \n    cross join school_years\n),\n\nteacher_school_changes as (\n    select *\n    from \"dev\".\"analytics\".\"int_teacher_schools_historical\"\n),\n\nteacher_active_courses as (\n    select \n        distinct teacher_id,\n        school_year,\n        course_name,\n        section_started_at\n    from \"dev\".\"analytics\".\"int_active_sections\"\n),\n\nteacher_active_courses_with_sy as (\n\n    select\n        tac.teacher_id,\n        tac.school_year,\n        tac.course_name,\n        tac.section_started_at,\n        tsc.school_id\n    from teacher_active_courses tac \n    join school_years sy\n        on tac.school_year = sy.school_year\n    join teacher_school_changes tsc \n        on tac.teacher_id = tsc.teacher_id \n        and sy.ended_at between tsc.started_at and tsc.ended_at \n),\n\nstarted_schools as (\n    select \n        school_id,\n        school_year,\n        min(section_started_at) as school_started_at,\n        listagg( distinct course_name, ', ') within group (order by course_name) active_courses\n    from teacher_active_courses_with_sy\n    group by 1, 2\n),\n\nactive_status_simple as (\n    select \n        all_schools_sy.school_id,\n        all_schools_sy.school_year,\n        case when started_schools.school_id is null then 0 else 1 end as is_active,\n        started_schools.school_started_at,\n        started_schools.active_courses\n    from all_schools_sy \n    left join started_schools\n        on started_schools.school_id = all_schools_sy.school_id \n        and started_schools.school_year = all_schools_sy.school_year\n),\n\nfull_status as (\n    -- Determine the active status for each school in each school year\n\n    select\n        school_id,\n        school_year,\n        is_active,\n        coalesce(\n            lag(is_active, 1) \n                over (partition by school_id order by school_year) \n            , 0\n        ) as prev_year_active,\n        coalesce( --force any NULL to be 0 for this function\n            max(is_active) \n                over (partition by school_id order by school_year rows between unbounded preceding and 1 preceding)\n            , 0\n        ) as ever_active_before,\n        (is_active || prev_year_active || ever_active_before) status_code,\n        school_started_at,\n        active_courses\n    from\n        active_status_simple\n\n), \n\nfinal as (\n\n    select\n        school_id,\n        school_year,\n        case \n            when status_code = '000' then 'market'\n            when status_code = '001' then 'inactive churn'\n            when status_code = '010' then '<impossible status>'\n            when status_code = '011' then 'inactive this year'\n            when status_code = '100' then 'active new'\n            when status_code = '101' then 'active reacquired'\n            when status_code = '110' then '<impossible status>'\n            when status_code = '111' then 'active retained'\n        end as status,\n        school_started_at,\n        active_courses\n        from full_status\n    order by\n        school_id, school_year\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"dim_school_status\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.255359Z", "completed_at": "2024-01-09T22:09:23.263164Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.270114Z", "completed_at": "2024-01-09T22:09:23.270126Z"}], "thread_id": "Thread-11", "execution_time": 0.036459922790527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_int_active_sections_teacher_id__school_year__course_name__section_id.df94559703", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        teacher_id, school_year, course_name, section_id\n    from \"dev\".\"analytics\".\"int_active_sections\"\n    group by teacher_id, school_year, course_name, section_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.251262Z", "completed_at": "2024-01-09T22:09:23.263860Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.271159Z", "completed_at": "2024-01-09T22:09:23.271167Z"}], "thread_id": "Thread-13", "execution_time": 0.038683176040649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.dim_teacher_status", "compiled": true, "compiled_code": "\n\nwith \nteacher_section_started as (\n    select teacher_id,\n        school_year,\n        listagg(distinct course_name, ', ') within group (order by course_name ASC) section_courses_started\n    from \"dev\".\"analytics\".\"int_active_sections\"\n    where teacher_id is not null \n    group by 1, 2\n),\n\nall_teacher_users as (\n\n    select\n        teacher_id,\n        created_at\n    from \"dev\".\"analytics\".\"dim_teachers\"\n\n), \n\nschool_years as (\n    select *\n    from \"dev\".\"analytics\".\"int_school_years\"\n),\n\nall_teachers_school_years as (\n\n    select\n        u.teacher_id,\n        sy.school_year\n    from all_teacher_users u\n    join school_years sy on u.created_at <= sy.ended_at\n    where sy.started_at < current_timestamp\n\n), \n\nactive_status_simple as (\n\n    select\n        all_sy.teacher_id,\n        all_sy.school_year,\n        case when t.teacher_id is null then 0 else 1 end as is_active,\n        t.section_courses_started\n\n    from all_teachers_school_years all_sy\n    left join teacher_section_started t on t.teacher_id = all_sy.teacher_id and t.school_year = all_sy.school_year\n\n), \n\nfull_status as (\n    -- Determine the active status for each teacher in each year\n\n    select\n        teacher_id,\n        school_year,\n        is_active,\n        section_courses_started,\n        coalesce(\n            lag(is_active, 1) \n                over (partition by teacher_id order by school_year) \n            , 0\n        ) as prev_year_active,\n        coalesce( --force any NULL to be 0 for this function\n            max(is_active) \n                over (partition by teacher_id order by school_year rows between unbounded preceding and 1 preceding)\n            , 0\n        ) as ever_active_before,\n        (is_active || prev_year_active || ever_active_before) status_code\n    from\n        active_status_simple\n\n), \n\nfinal as (\n\n    select\n        teacher_id,\n        school_year,\n        case \n            when status_code = '000' then 'market'\n            when status_code = '001' then 'inactive churn'\n            when status_code = '010' then '<impossible status>'\n            when status_code = '011' then 'inactive this year'\n            when status_code = '100' then 'active new'\n            when status_code = '101' then 'active reacquired'\n            when status_code = '110' then '<impossible status>'\n            when status_code = '111' then 'active retained'\n        end as status,\n        section_courses_started\n    from\n        full_status\n    order by\n        teacher_id, school_year\n)\n\nselect * \nfrom final", "relation_name": "\"dev\".\"analytics\".\"dim_teacher_status\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.278373Z", "completed_at": "2024-01-09T22:09:23.290016Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.291377Z", "completed_at": "2024-01-09T22:09:23.291384Z"}], "thread_id": "Thread-4", "execution_time": 0.015915632247924805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cdo_analytics.fct_weekly_school_acquisition_metrics", "compiled": true, "compiled_code": "with \nschool_status as (\n    select * \n    from \"dev\".\"analytics\".\"dim_school_status\"\n),\n\ndim_schools as (\n    select * \n    from \"dev\".\"analytics\".\"dim_schools\"\n),\n\nschool_status_sy as (\n    select \n        school_status.school_id,\n        school_status.school_year,\n        school_status.status,\n        school_status.active_courses,\n        dim_schools.school_level_simple,\n        school_status.school_started_at\n    from school_status \n    left join dim_schools \n        on school_status.school_id = dim_schools.school_id\n),\n\nactive_schools_by_week as (\n    select \n        school_year,\n        school_level_simple,\n        status,\n        date_part(week, school_started_at) as start_week,\n        (start_week + 26) % 52 as sy_week_order, -- hardcoded for now, make dynamic later\n        min(school_started_at) as week_of,\n        count(distinct school_id) as num_schools\n    from school_status_sy\n    where status like 'active %'\n    group by 1,2,3,4,5\n\n),\n\nrunning_totals_by_week as (\n    select\n        school_year,\n        status,\n        start_week,\n        sy_week_order,\n        min(week_of)::date week_of,\n        sum(case when school_level_simple like '%el%' then num_schools else 0 end) as el_schools,\n        sum(case when school_level_simple like '%mi%' then num_schools else 0 end) as mi_schools,\n        sum(case when school_level_simple like '%hi%' then num_schools else 0 end) as hi_schools,\n        sum(el_schools) over (\n            partition by school_year, status order by sy_week_order\n            rows between unbounded preceding and current row\n        ) el_running_total,\n        \n        sum(mi_schools) over (\n            partition by school_year, status order by sy_week_order\n            rows between unbounded preceding and current row\n        ) mi_running_total,\n        \n        sum(hi_schools) over (\n            partition by school_year, status order by sy_week_order\n            rows between unbounded preceding and current row\n        ) hi_running_total\n    from active_schools_by_week\n    group by 1,2,3,4\n    order by status, sy_week_order\n),\n\nreport_by_week as (\n    select\n        'elementary' as school_level,\n        school_year,\n        status,\n        start_week,\n        sy_week_order,\n        week_of,\n        el_schools as num_schools_this_week,\n        el_running_total as num_schools_running_total\n    \n    from running_totals_by_week\n\n  \n    union all\n  \n    select\n        'middle' as school_level,\n        school_year,\n        status,\n        start_week,\n        sy_week_order,\n        week_of,\n        mi_schools as num_schools_this_week,\n        mi_running_total as num_schools_running_total\n    from running_totals_by_week\n\n    union all\n  \n    select\n        'high' as school_level,\n        school_year,\n        status,\n        start_week,\n        sy_week_order,\n        week_of,\n        hi_schools as num_schools_this_week,\n        hi_running_total as num_schools_running_total\n    from running_totals_by_week\n)\n\nselect * \nfrom report_by_week", "relation_name": "\"dev\".\"analytics\".\"fct_weekly_school_acquisition_metrics\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-09T22:09:23.283697Z", "completed_at": "2024-01-09T22:09:23.292081Z"}, {"name": "execute", "started_at": "2024-01-09T22:09:23.294955Z", "completed_at": "2024-01-09T22:09:23.294962Z"}], "thread_id": "Thread-7", "execution_time": 0.013434171676635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cdo_analytics.dbt_utils_unique_combination_of_columns_dim_teacher_status_school_year__teacher_id.b0cc028c6b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        school_year, teacher_id\n    from \"dev\".\"analytics\".\"dim_teacher_status\"\n    group by school_year, teacher_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 2.4827938079833984, "args": {"indirect_selection": "eager", "macro_debugging": false, "use_colors": true, "exclude": [], "introspect": true, "invocation_command": "dbt --log-format json --debug docs generate --target default --profile user --profiles-dir /tmp/jobs/238759687/.dbt --project-dir /tmp/jobs/238759687/target/dbt", "enable_legacy_logger": false, "partial_parse": true, "profile": "user", "show_resource_report": false, "which": "generate", "log_level": "info", "project_dir": "/tmp/jobs/238759687/target/dbt", "log_format_file": "json", "state": "/tmp/defer-artifacts", "log_format": "json", "send_anonymous_usage_stats": true, "target": "default", "empty_catalog": false, "static_parser": true, "version_check": true, "cache_selected_only": false, "debug": true, "print": true, "select": [], "log_file_max_bytes": 10485760, "log_path": "/tmp/jobs/238759687/target/dbt/logs", "populate_cache": true, "partial_parse_file_diff": true, "profiles_dir": "/tmp/jobs/238759687/.dbt", "quiet": false, "printer_width": 80, "warn_error_options": {"include": [], "exclude": []}, "strict_mode": false, "favor_state": false, "log_level_file": "debug", "static": false, "write_json": true, "defer": true, "use_colors_file": true, "vars": {}, "compile": true}}